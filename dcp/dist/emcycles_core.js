//This module was created by a dcpify script from AITF

module.declare([], function(require, exports, module) {

    module.exports = (() => {
        var A = {
                436: (A, I, g) => {
                    var C = {
                        getRandomValues: function(A) {
                            for (var I = 0; I < A.length; I++) A[I] = 256 * Math.random() | 0
                        }
                    };
                    I.render = async function(I, Q, B, E = (() => {})) {
                        (k = void 0 !== I ? I : {}).noInitialRun = !0, k.draw_out = k.draw_out || function(A, I, g, C) {
                            k.imageData = [].slice.call(k.HEAPU8.subarray(A, A + I * g * 4))
                        }, k.INITIAL_MEMORY = 268435456;
                        var i, D = function() {
                                function A() {
                                    this.pos = 0, this.bufferLength = 0, this.eof = !1, this.buffer = null
                                }
                                return A.prototype = {
                                    ensureBuffer: function(A) {
                                        var I = this.buffer,
                                            g = I ? I.byteLength : 0;
                                        if (A < g) return I;
                                        for (var C = 512; C < A;) C <<= 1;
                                        for (var Q = new Uint8Array(C), B = 0; B < g; ++B) Q[B] = I[B];
                                        return this.buffer = Q
                                    },
                                    getByte: function() {
                                        for (var A = this.pos; this.bufferLength <= A;) {
                                            if (this.eof) return null;
                                            this.readBlock()
                                        }
                                        return this.buffer[this.pos++]
                                    },
                                    getBytes: function(A) {
                                        var I = this.pos;
                                        if (A) {
                                            this.ensureBuffer(I + A);
                                            for (var g = I + A; !this.eof && this.bufferLength < g;) this.readBlock();
                                            var C = this.bufferLength;
                                            g > C && (g = C)
                                        } else {
                                            for (; !this.eof;) this.readBlock();
                                            g = this.bufferLength
                                        }
                                        return this.pos = g, this.buffer.subarray(I, g)
                                    },
                                    lookChar: function() {
                                        for (var A = this.pos; this.bufferLength <= A;) {
                                            if (this.eof) return null;
                                            this.readBlock()
                                        }
                                        return String.fromCharCode(this.buffer[this.pos])
                                    },
                                    getChar: function() {
                                        for (var A = this.pos; this.bufferLength <= A;) {
                                            if (this.eof) return null;
                                            this.readBlock()
                                        }
                                        return String.fromCharCode(this.buffer[this.pos++])
                                    },
                                    makeSubStream: function(A, I, g) {
                                        for (var C = A + I; this.bufferLength <= C && !this.eof;) this.readBlock();
                                        return new Stream(this.buffer, A, I, g)
                                    },
                                    skip: function(A) {
                                        A || (A = 1), this.pos += A
                                    },
                                    reset: function() {
                                        this.pos = 0
                                    }
                                }, A
                            }(),
                            o = function() {
                                var A = new Uint32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
                                    I = new Uint32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]),
                                    g = new Uint32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]),
                                    C = [new Uint32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9],
                                    Q = [new Uint32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5];

                                function B(A) {
                                    throw new Error(A)
                                }

                                function E(A) {
                                    var I = 0,
                                        g = A[I++],
                                        C = A[I++]; - 1 != g && -1 != C || B("Invalid header in flate stream"), 8 != (15 & g) && B("Unknown compression method in flate stream"), ((g << 8) + C) % 31 != 0 && B("Bad FCHECK in flate stream"), 32 & C && B("FDICT bit set in flate stream"), this.bytes = A, this.bytesPos = 2, this.codeSize = 0, this.codeBuf = 0, D.call(this)
                                }
                                return E.prototype = Object.create(D.prototype), E.prototype.getBits = function(A) {
                                    for (var I, g = this.codeSize, C = this.codeBuf, Q = this.bytes, E = this.bytesPos; g < A;) void 0 === (I = Q[E++]) && B("Bad encoding in flate stream"), C |= I << g, g += 8;
                                    return I = C & (1 << A) - 1, this.codeBuf = C >> A, this.codeSize = g -= A, this.bytesPos = E, I
                                }, E.prototype.getCode = function(A) {
                                    for (var I = A[0], g = A[1], C = this.codeSize, Q = this.codeBuf, E = this.bytes, i = this.bytesPos; C < g;) {
                                        var D;
                                        void 0 === (D = E[i++]) && B("Bad encoding in flate stream"), Q |= D << C, C += 8
                                    }
                                    var o = I[Q & (1 << g) - 1],
                                        w = o >> 16,
                                        k = 65535 & o;
                                    return (0 == C || C < w || 0 == w) && B("Bad encoding in flate stream"), this.codeBuf = Q >> w, this.codeSize = C - w, this.bytesPos = i, k
                                }, E.prototype.generateHuffmanTable = function(A) {
                                    for (var I = A.length, g = 0, C = 0; C < I; ++C) A[C] > g && (g = A[C]);
                                    for (var Q = 1 << g, B = new Uint32Array(Q), E = 1, i = 0, D = 2; E <= g; ++E, i <<= 1, D <<= 1)
                                        for (var o = 0; o < I; ++o)
                                            if (A[o] == E) {
                                                var w = 0,
                                                    k = i;
                                                for (C = 0; C < E; ++C) w = w << 1 | 1 & k, k >>= 1;
                                                for (C = w; C < Q; C += D) B[C] = E << 16 | o;
                                                ++i
                                            } return [B, g]
                                }, E.prototype.readBlock = function() {
                                    function E(A, I, g, C, Q) {
                                        for (var B = A.getBits(g) + C; B-- > 0;) I[S++] = Q
                                    }
                                    var i = this.getBits(3);
                                    if (1 & i && (this.eof = !0), 0 != (i >>= 1)) {
                                        var D, o;
                                        if (1 == i) D = C, o = Q;
                                        else if (2 == i) {
                                            for (var w = this.getBits(5) + 257, k = this.getBits(5) + 1, G = this.getBits(4) + 4, J = Array(A.length), S = 0; S < G;) J[A[S++]] = this.getBits(3);
                                            for (var a = this.generateHuffmanTable(J), U = 0, N = (S = 0, w + k), h = new Array(N); S < N;) {
                                                var s = this.getCode(a);
                                                16 == s ? E(this, h, 2, 3, U) : 17 == s ? E(this, h, 3, 3, U = 0) : 18 == s ? E(this, h, 7, 11, U = 0) : h[S++] = U = s
                                            }
                                            D = this.generateHuffmanTable(h.slice(0, w)), o = this.generateHuffmanTable(h.slice(w, N))
                                        } else B("Unknown block type in flate stream");
                                        for (var F = (r = this.buffer) ? r.length : 0, M = this.bufferLength;;) {
                                            var t = this.getCode(D);
                                            if (t < 256) M + 1 >= F && (F = (r = this.ensureBuffer(M + 1)).length), r[M++] = t;
                                            else {
                                                if (256 == t) return void(this.bufferLength = M);
                                                var y = (t = I[t -= 257]) >> 16;
                                                y > 0 && (y = this.getBits(y)), U = (65535 & t) + y, t = this.getCode(o), (y = (t = g[t]) >> 16) > 0 && (y = this.getBits(y));
                                                var e = (65535 & t) + y;
                                                M + U >= F && (F = (r = this.ensureBuffer(M + U)).length);
                                                for (var c = 0; c < U; ++c, ++M) r[M] = r[M - e]
                                            }
                                        }
                                    } else {
                                        var R, K = this.bytes,
                                            H = this.bytesPos;
                                        void 0 === (R = K[H++]) && B("Bad block header in flate stream");
                                        var Y = R;
                                        void 0 === (R = K[H++]) && B("Bad block header in flate stream"), Y |= R << 8, void 0 === (R = K[H++]) && B("Bad block header in flate stream");
                                        var n = R;
                                        void 0 === (R = K[H++]) && B("Bad block header in flate stream"), (n |= R << 8) != (65535 & ~Y) && B("Bad uncompressed block length in flate stream"), this.codeBuf = 0, this.codeSize = 0;
                                        var q = this.bufferLength,
                                            r = this.ensureBuffer(q + Y),
                                            L = q + Y;
                                        this.bufferLength = L;
                                        for (var d = q; d < L; ++d) {
                                            if (void 0 === (R = K[H++])) {
                                                this.eof = !0;
                                                break
                                            }
                                            r[d] = R
                                        }
                                        this.bytesPos = H
                                    }
                                }, E
                            }();
                        i = function() {
                            var A, I;

                            function g(A) {
                                var I, g, C, Q, B, E, i, D, o, w, k, G, J;
                                for (this.data = A, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.animation = null, this.text = {}, B = null;;) {
                                    switch (I = this.readUInt32(), D = function() {
                                        var A, I;
                                        for (I = [], A = 0; A < 4; ++A) I.push(String.fromCharCode(this.data[this.pos++]));
                                        return I
                                    }.call(this).join("")) {
                                        case "IHDR":
                                            this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                                            break;
                                        case "acTL":
                                            this.animation = {
                                                numFrames: this.readUInt32(),
                                                numPlays: this.readUInt32() || 1 / 0,
                                                frames: []
                                            };
                                            break;
                                        case "PLTE":
                                            this.palette = this.read(I);
                                            break;
                                        case "fcTL":
                                            B && this.animation.frames.push(B), this.pos += 4, B = {
                                                width: this.readUInt32(),
                                                height: this.readUInt32(),
                                                xOffset: this.readUInt32(),
                                                yOffset: this.readUInt32()
                                            }, Q = this.readUInt16(), C = this.readUInt16() || 100, B.delay = 1e3 * Q / C, B.disposeOp = this.data[this.pos++], B.blendOp = this.data[this.pos++], B.data = [];
                                            break;
                                        case "IDAT":
                                        case "fdAT":
                                            for ("fdAT" === D && (this.pos += 4, I -= 4), A = (null != B ? B.data : void 0) || this.imgData, k = 0; 0 <= I ? k < I : k > I; 0 <= I ? ++k : --k) A.push(this.data[this.pos++]);
                                            break;
                                        case "tRNS":
                                            switch (this.transparency = {}, this.colorType) {
                                                case 3:
                                                    if (this.transparency.indexed = this.read(I), (o = 255 - this.transparency.indexed.length) > 0)
                                                        for (G = 0; 0 <= o ? G < o : G > o; 0 <= o ? ++G : --G) this.transparency.indexed.push(255);
                                                    break;
                                                case 0:
                                                    this.transparency.grayscale = this.read(I)[0];
                                                    break;
                                                case 2:
                                                    this.transparency.rgb = this.read(I)
                                            }
                                            break;
                                        case "tEXt":
                                            E = (w = this.read(I)).indexOf(0), i = String.fromCharCode.apply(String, w.slice(0, E)), this.text[i] = String.fromCharCode.apply(String, w.slice(E + 1));
                                            break;
                                        case "IEND":
                                            return B && this.animation.frames.push(B), this.colors = function() {
                                                switch (this.colorType) {
                                                    case 0:
                                                    case 3:
                                                    case 4:
                                                        return 1;
                                                    case 2:
                                                    case 6:
                                                        return 3
                                                }
                                            }.call(this), this.hasAlphaChannel = 4 === (J = this.colorType) || 6 === J, g = this.colors + (this.hasAlphaChannel ? 1 : 0), this.pixelBitlength = this.bits * g, this.colorSpace = function() {
                                                switch (this.colors) {
                                                    case 1:
                                                        return "DeviceGray";
                                                    case 3:
                                                        return "DeviceRGB"
                                                }
                                            }.call(this), void(this.imgData = new Uint8Array(this.imgData));
                                        default:
                                            this.pos += I
                                    }
                                    if (this.pos += 4, this.pos > this.data.length) throw new Error("Incomplete or corrupt PNG file")
                                }
                            }
                            return g.load = function(A, I, C) {
                                var Q;
                                return "function" == typeof I && (C = I), (Q = new XMLHttpRequest).open("GET", A, !0), Q.responseType = "arraybuffer", Q.onload = function() {
                                    var A;
                                    return A = new g(new Uint8Array(Q.response || Q.mozResponseArrayBuffer)), "function" == typeof(null != I ? I.getContext : void 0) && A.render(I), "function" == typeof C ? C(A) : void 0
                                }, Q.send(null)
                            }, g.prototype.read = function(A) {
                                var I, g;
                                for (g = [], I = 0; 0 <= A ? I < A : I > A; 0 <= A ? ++I : --I) g.push(this.data[this.pos++]);
                                return g
                            }, g.prototype.readUInt32 = function() {
                                return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++]
                            }, g.prototype.readUInt16 = function() {
                                return this.data[this.pos++] << 8 | this.data[this.pos++]
                            }, g.prototype.decodePixels = function(A) {
                                var I, g, C, Q, B, E, i, D, w, k, G, J, S, a, U, N, h, s, F, M, t, y, e;
                                if (null == A && (A = this.imgData), 0 === A.length) return new Uint8Array(0);
                                for (A = (A = new o(A)).getBytes(), N = (J = this.pixelBitlength / 8) * this.width, S = new Uint8Array(N * this.height), E = A.length, U = 0, a = 0, g = 0; a < E;) {
                                    switch (A[a++]) {
                                        case 0:
                                            for (Q = F = 0; F < N; Q = F += 1) S[g++] = A[a++];
                                            break;
                                        case 1:
                                            for (Q = M = 0; M < N; Q = M += 1) I = A[a++], B = Q < J ? 0 : S[g - J], S[g++] = (I + B) % 256;
                                            break;
                                        case 2:
                                            for (Q = t = 0; t < N; Q = t += 1) I = A[a++], C = (Q - Q % J) / J, h = U && S[(U - 1) * N + C * J + Q % J], S[g++] = (h + I) % 256;
                                            break;
                                        case 3:
                                            for (Q = y = 0; y < N; Q = y += 1) I = A[a++], C = (Q - Q % J) / J, B = Q < J ? 0 : S[g - J], h = U && S[(U - 1) * N + C * J + Q % J], S[g++] = (I + Math.floor((B + h) / 2)) % 256;
                                            break;
                                        case 4:
                                            for (Q = e = 0; e < N; Q = e += 1) I = A[a++], C = (Q - Q % J) / J, B = Q < J ? 0 : S[g - J], 0 === U ? h = s = 0 : (h = S[(U - 1) * N + C * J + Q % J], s = C && S[(U - 1) * N + (C - 1) * J + Q % J]), i = B + h - s, D = Math.abs(i - B), k = Math.abs(i - h), G = Math.abs(i - s), w = D <= k && D <= G ? B : k <= G ? h : s, S[g++] = (I + w) % 256;
                                            break;
                                        default:
                                            throw new Error("Invalid filter algorithm: " + A[a - 1])
                                    }
                                    U++
                                }
                                return S
                            }, g.prototype.decodePalette = function() {
                                var A, I, g, C, Q, B, E, i, D;
                                for (g = this.palette, B = this.transparency.indexed || [], Q = new Uint8Array((B.length || 0) + g.length), C = 0, g.length, A = 0, I = E = 0, i = g.length; E < i; I = E += 3) Q[C++] = g[I], Q[C++] = g[I + 1], Q[C++] = g[I + 2], Q[C++] = null != (D = B[A++]) ? D : 255;
                                return Q
                            }, g.prototype.copyToImageData = function(A, I) {
                                var g, C, Q, B, E, i, D, o, w, k, G;
                                if (C = this.colors, w = null, g = this.hasAlphaChannel, this.palette.length && (w = null != (G = this._decodedPalette) ? G : this._decodedPalette = this.decodePalette(), C = 4, g = !0), o = (Q = A.data).length, E = w || I, B = i = 0, 1 === C)
                                    for (; B < o;) D = w ? 4 * I[B / 4] : i, k = E[D++], Q[B++] = k, Q[B++] = k, Q[B++] = k, Q[B++] = g ? E[D++] : 255, i = D;
                                else
                                    for (; B < o;) D = w ? 4 * I[B / 4] : i, Q[B++] = E[D++], Q[B++] = E[D++], Q[B++] = E[D++], Q[B++] = g ? E[D++] : 255, i = D
                            }, g.prototype.decode = function() {
                                var A;
                                return A = new Uint8Array(this.width * this.height * 4), this.copyToImageData(A, this.decodePixels()), A
                            }, I = null, A = function(A) {
                                var g;
                                return I.width = A.width, I.height = A.height, I.clearRect(0, 0, A.width, A.height), I.putImageData(A, 0, 0), (g = new Image).src = null.toDataURL(), g
                            }, g.prototype.decodeFrames = function(I) {
                                var g, C, Q, B, E, i, D, o;
                                if (this.animation) {
                                    for (o = [], C = E = 0, i = (D = this.animation.frames).length; E < i; C = ++E) g = D[C], Q = I.createImageData(g.width, g.height), B = this.decodePixels(new Uint8Array(g.data)), this.copyToImageData(Q, B), g.imageData = Q, o.push(g.image = A(Q));
                                    return o
                                }
                            }, g.prototype.renderFrame = function(A, I) {
                                var g, C, Q;
                                return g = (C = this.animation.frames)[I], Q = C[I - 1], 0 === I && A.clearRect(0, 0, this.width, this.height), 1 === (null != Q ? Q.disposeOp : void 0) ? A.clearRect(Q.xOffset, Q.yOffset, Q.width, Q.height) : 2 === (null != Q ? Q.disposeOp : void 0) && A.putImageData(Q.imageData, Q.xOffset, Q.yOffset), 0 === g.blendOp && A.clearRect(g.xOffset, g.yOffset, g.width, g.height), A.drawImage(g.image, g.xOffset, g.yOffset)
                            }, g.prototype.animate = function(A) {
                                var I, g, C, Q, B, E, i = this;
                                return g = 0, E = this.animation, Q = E.numFrames, C = E.frames, B = E.numPlays, (I = function() {
                                    var E, D;
                                    if (E = g++ % Q, D = C[E], i.renderFrame(A, E), Q > 1 && g / Q < B) return i.animation._timeout = setTimeout(I, D.delay)
                                })()
                            }, g.prototype.stopAnimation = function() {
                                var A;
                                return clearTimeout(null != (A = this.animation) ? A._timeout : void 0)
                            }, g.prototype.render = function(A) {
                                var I, g;
                                return A._png && A._png.stopAnimation(), A._png = this, A.width = this.width, A.height = this.height, I = A.getContext("2d"), this.animation ? (this.decodeFrames(I), this.animate(I)) : (g = I.createImageData(this.width, this.height), this.copyToImageData(g, this.decodePixels()), I.putImageData(g, 0, 0))
                            }, g
                        }();
                        var w, k = void 0 !== k ? k : {},
                            G = {};
                        for (w in k) k.hasOwnProperty(w) && (G[w] = k[w]);
                        var J = [],
                            S = "./this.program",
                            a = function(A, I) {
                                throw I
                            },
                            U = !1,
                            N = !1,
                            h = !1,
                            s = !1;
                        if (U = "object" == typeof window, N = "function" == typeof importScripts, h = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, s = !U && !h && !N, k.ENVIRONMENT) throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");
                        var F, M, t, y, e = "";

                        function c(A) {
                            return k.locateFile ? k.locateFile(A, e) : e + A
                        }
                        if (h) e = N ? g(386).dirname(e) + "/" : "//", F = function(A, I) {
                            var C = mI(A);
                            return C ? I ? C : C.toString() : (t || (t = g(993)), y || (y = g(386)), A = y.normalize(A), t.readFileSync(A, I ? null : "utf8"))
                        }, M = function(A) {
                            var I = F(A, !0);
                            return I.buffer || (I = new Uint8Array(I)), T(I.buffer), I
                        }, process.argv.length > 1 && (S = process.argv[1].replace(/\\/g, "/")), J = process.argv.slice(2), A.exports = k, process.on("uncaughtException", (function(A) {
                            if (!(A instanceof Qg)) throw A
                        })), process.on("unhandledRejection", lA), a = function(A) {
                            process.exit(A)
                        }, k.inspect = function() {
                            return "[Emscripten Module object]"
                        };
                        else if (s) "undefined" != typeof read && (F = function(A) {
                            var I = mI(A);
                            return I ? TI(I) : read(A)
                        }), M = function(A) {
                            var I;
                            return (I = mI(A)) ? I : "function" == typeof readbuffer ? new Uint8Array(readbuffer(A)) : (T("object" == typeof(I = read(A, "binary"))), I)
                        }, "undefined" != typeof scriptArgs ? J = scriptArgs : void 0 !== arguments && (J = arguments), "function" == typeof quit && (a = function(A) {
                            quit(A)
                        }), "undefined" != typeof print && ("undefined" == typeof console && (console = {}), console.log = print, console.warn = console.error = "undefined" != typeof printErr ? printErr : print);
                        else {
                            if (!U && !N) throw new Error("environment detection error");
                            N ? e = "dcp/worker" : document.currentScript && (e = document.currentScript.src), e = 0 !== e.indexOf("blob:") ? e.substr(0, e.lastIndexOf("/") + 1) : "", F = function(A) {
                                try {
                                    var I = new XMLHttpRequest;
                                    return I.open("GET", A, !1), I.send(null), I.responseText
                                } catch (I) {
                                    var g = mI(A);
                                    if (g) return TI(g);
                                    throw I
                                }
                            }, N && (M = function(A) {
                                try {
                                    var I = new XMLHttpRequest;
                                    return I.open("GET", A, !1), I.responseType = "arraybuffer", I.send(null), new Uint8Array(I.response)
                                } catch (I) {
                                    var g = mI(A);
                                    if (g) return g;
                                    throw I
                                }
                            })
                        }
                        var R = k.print || console.log.bind(console),
                            K = k.printErr || console.warn.bind(console);
                        for (w in G) G.hasOwnProperty(w) && (k[w] = G[w]);
                        G = null, k.arguments && (J = k.arguments), Object.getOwnPropertyDescriptor(k, "arguments") || Object.defineProperty(k, "arguments", {
                            configurable: !0,
                            get: function() {
                                lA("Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), k.thisProgram && (S = k.thisProgram), Object.getOwnPropertyDescriptor(k, "thisProgram") || Object.defineProperty(k, "thisProgram", {
                            configurable: !0,
                            get: function() {
                                lA("Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), k.quit && (a = k.quit), Object.getOwnPropertyDescriptor(k, "quit") || Object.defineProperty(k, "quit", {
                            configurable: !0,
                            get: function() {
                                lA("Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), T(void 0 === k.memoryInitializerPrefixURL, "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"), T(void 0 === k.pthreadMainPrefixURL, "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"), T(void 0 === k.cdInitializerPrefixURL, "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"), T(void 0 === k.filePackagePrefixURL, "Module.filePackagePrefixURL option was removed, use Module.locateFile instead"), T(void 0 === k.read, "Module.read option was removed (modify read_ in JS)"), T(void 0 === k.readAsync, "Module.readAsync option was removed (modify readAsync in JS)"), T(void 0 === k.readBinary, "Module.readBinary option was removed (modify readBinary in JS)"), T(void 0 === k.setWindowTitle, "Module.setWindowTitle option was removed (modify setWindowTitle in JS)"), T(void 0 === k.TOTAL_MEMORY, "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"), Object.getOwnPropertyDescriptor(k, "read") || Object.defineProperty(k, "read", {
                            configurable: !0,
                            get: function() {
                                lA("Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), Object.getOwnPropertyDescriptor(k, "readAsync") || Object.defineProperty(k, "readAsync", {
                            configurable: !0,
                            get: function() {
                                lA("Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), Object.getOwnPropertyDescriptor(k, "readBinary") || Object.defineProperty(k, "readBinary", {
                            configurable: !0,
                            get: function() {
                                lA("Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), Object.getOwnPropertyDescriptor(k, "setWindowTitle") || Object.defineProperty(k, "setWindowTitle", {
                            configurable: !0,
                            get: function() {
                                lA("Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        });
                        var H = 16;

                        function Y(A, I) {
                            return I || (I = H), Math.ceil(A / I) * I
                        }

                        function n(A) {
                            n.shown || (n.shown = {}), n.shown[A] || (n.shown[A] = 1, K(A))
                        }
                        var q, r, L, d = 0,
                            l = function(A) {
                                d = A
                            },
                            p = function() {
                                return d
                            };
                        k.wasmBinary && (q = k.wasmBinary), Object.getOwnPropertyDescriptor(k, "wasmBinary") || Object.defineProperty(k, "wasmBinary", {
                            configurable: !0,
                            get: function() {
                                lA("Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), k.noExitRuntime && (r = k.noExitRuntime), Object.getOwnPropertyDescriptor(k, "noExitRuntime") || Object.defineProperty(k, "noExitRuntime", {
                            configurable: !0,
                            get: function() {
                                lA("Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                            }
                        }), "object" != typeof WebAssembly && lA("no native wasm support detected");
                        var f = new WebAssembly.Table({
                                initial: 390,
                                maximum: 390,
                                element: "anyfunc"
                            }),
                            O = !1;

                        function T(A, I) {
                            A || lA("Assertion failed: " + I)
                        }
                        var Z = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;

                        function b(A, I, g) {
                            for (var C = I + g, Q = I; A[Q] && !(Q >= C);) ++Q;
                            if (Q - I > 16 && A.subarray && Z) return Z.decode(A.subarray(I, Q));
                            for (var B = ""; I < Q;) {
                                var E = A[I++];
                                if (128 & E) {
                                    var i = 63 & A[I++];
                                    if (192 != (224 & E)) {
                                        var D = 63 & A[I++];
                                        if (224 == (240 & E) ? E = (15 & E) << 12 | i << 6 | D : (240 != (248 & E) && n("Invalid UTF-8 leading byte 0x" + E.toString(16) + " encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!"), E = (7 & E) << 18 | i << 12 | D << 6 | 63 & A[I++]), E < 65536) B += String.fromCharCode(E);
                                        else {
                                            var o = E - 65536;
                                            B += String.fromCharCode(55296 | o >> 10, 56320 | 1023 & o)
                                        }
                                    } else B += String.fromCharCode((31 & E) << 6 | i)
                                } else B += String.fromCharCode(E)
                            }
                            return B
                        }

                        function m(A, I) {
                            return A ? b(j, A, I) : ""
                        }

                        function X(A, I, g, C) {
                            if (!(C > 0)) return 0;
                            for (var Q = g, B = g + C - 1, E = 0; E < A.length; ++E) {
                                var i = A.charCodeAt(E);
                                if (i >= 55296 && i <= 57343 && (i = 65536 + ((1023 & i) << 10) | 1023 & A.charCodeAt(++E)), i <= 127) {
                                    if (g >= B) break;
                                    I[g++] = i
                                } else if (i <= 2047) {
                                    if (g + 1 >= B) break;
                                    I[g++] = 192 | i >> 6, I[g++] = 128 | 63 & i
                                } else if (i <= 65535) {
                                    if (g + 2 >= B) break;
                                    I[g++] = 224 | i >> 12, I[g++] = 128 | i >> 6 & 63, I[g++] = 128 | 63 & i
                                } else {
                                    if (g + 3 >= B) break;
                                    i >= 2097152 && n("Invalid Unicode code point 0x" + i.toString(16) + " encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF)."), I[g++] = 240 | i >> 18, I[g++] = 128 | i >> 12 & 63, I[g++] = 128 | i >> 6 & 63, I[g++] = 128 | 63 & i
                                }
                            }
                            return I[g] = 0, g - Q
                        }

                        function P(A, I, g) {
                            return T("number" == typeof g, "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"), X(A, j, I, g)
                        }

                        function u(A) {
                            for (var I = 0, g = 0; g < A.length; ++g) {
                                var C = A.charCodeAt(g);
                                C >= 55296 && C <= 57343 && (C = 65536 + ((1023 & C) << 10) | 1023 & A.charCodeAt(++g)), C <= 127 ? ++I : I += C <= 2047 ? 2 : C <= 65535 ? 3 : 4
                            }
                            return I
                        }

                        function x(A) {
                            var I = u(A) + 1,
                                g = zI(I);
                            return X(A, V, g, I), g
                        }
                        "undefined" != typeof TextDecoder && new TextDecoder("utf-16le");
                        var W, V, j, v, z, _, $, AA = 65536;

                        function IA(A, I) {
                            return A % I > 0 && (A += I - A % I), A
                        }

                        function gA(A) {
                            W = A, k.HEAP8 = V = new Int8Array(A), k.HEAP16 = v = new Int16Array(A), k.HEAP32 = z = new Int32Array(A), k.HEAPU8 = j = new Uint8Array(A), k.HEAPU16 = new Uint16Array(A), k.HEAPU32 = _ = new Uint32Array(A), k.HEAPF32 = new Float32Array(A), k.HEAPF64 = $ = new Float64Array(A)
                        }
                        var CA = 5291152,
                            QA = 48272,
                            BA = 5291152,
                            EA = 48256;
                        T(CA % 16 == 0, "stack must start aligned"), T(BA % 16 == 0, "heap must start aligned");
                        var iA = 5242880;
                        k.TOTAL_STACK && T(iA === k.TOTAL_STACK, "the stack size can no longer be determined at runtime");
                        var DA = k.INITIAL_MEMORY || 16777216;

                        function oA() {
                            T(0 == (3 & QA)), _[1 + (QA >> 2)] = 34821223, _[2 + (QA >> 2)] = 2310721022, z[0] = 1668509029
                        }

                        function wA() {
                            var A = _[1 + (QA >> 2)],
                                I = _[2 + (QA >> 2)];
                            34821223 == A && 2310721022 == I || lA("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x" + I.toString(16) + " " + A.toString(16)), 1668509029 !== z[0] && lA("Runtime error: The application has corrupted its heap memory area (address zero)!")
                        }
                        Object.getOwnPropertyDescriptor(k, "INITIAL_MEMORY") || Object.defineProperty(k, "INITIAL_MEMORY", {
                                configurable: !0,
                                get: function() {
                                    lA("Module.INITIAL_MEMORY has been replaced with plain INITIAL_INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")
                                }
                            }), T(DA >= iA, "INITIAL_MEMORY should be larger than TOTAL_STACK, was " + DA + "! (TOTAL_STACK=" + iA + ")"), T("undefined" != typeof Int32Array && "undefined" != typeof Float64Array && void 0 !== Int32Array.prototype.subarray && void 0 !== Int32Array.prototype.set, "JS engine does not provide full typed array support"), (L = k.wasmMemory ? k.wasmMemory : new WebAssembly.Memory({
                                initial: DA / AA,
                                maximum: 2147483648 / AA
                            })) && (W = L.buffer), T((DA = W.byteLength) % AA == 0), T(65536 % AA == 0), gA(W), z[EA >> 2] = BA,
                            function() {
                                var A = new Int16Array(1),
                                    I = new Int8Array(A.buffer);
                                if (A[0] = 25459, 115 !== I[0] || 99 !== I[1]) throw "Runtime error: expected the system to be little-endian!"
                            }();
                        var kA = [],
                            GA = [],
                            JA = [],
                            SA = [],
                            aA = !1,
                            UA = !1;

                        function NA() {
                            if (k.preRun)
                                for ("function" == typeof k.preRun && (k.preRun = [k.preRun]); k.preRun.length;) tA(k.preRun.shift());
                            jA(kA)
                        }

                        function hA() {
                            wA(), T(!aA), aA = !0, k.noFSInit || oI.init.initialized || oI.init(), BI.init(), jA(GA)
                        }

                        function sA() {
                            wA(), oI.ignorePermissions = !1, jA(JA)
                        }

                        function FA() {
                            wA(), UA = !0
                        }

                        function MA() {
                            if (wA(), k.postRun)
                                for ("function" == typeof k.postRun && (k.postRun = [k.postRun]); k.postRun.length;) yA(k.postRun.shift());
                            jA(SA)
                        }

                        function tA(A) {
                            kA.unshift(A)
                        }

                        function yA(A) {
                            SA.unshift(A)
                        }
                        T(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"), T(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"), T(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"), T(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
                        var eA = Math.abs,
                            cA = (Math.cos, Math.sin, Math.tan, Math.acos, Math.asin, Math.atan, Math.atan2, Math.exp, Math.log, Math.sqrt, Math.ceil),
                            RA = Math.floor,
                            KA = (Math.pow, Math.imul, Math.fround, Math.round, Math.min),
                            HA = (Math.max, Math.clz32, Math.trunc, 0),
                            YA = null,
                            nA = null,
                            qA = {};

                        function rA(A) {
                            for (var I = A;;) {
                                if (!qA[A]) return A;
                                A = I + Math.random()
                            }
                        }

                        function LA(A) {
                            HA++, k.monitorRunDependencies && k.monitorRunDependencies(HA), A ? (T(!qA[A]), qA[A] = 1, null === YA && "undefined" != typeof setInterval && (YA = setInterval((function() {
                                if (O) return clearInterval(YA), void(YA = null);
                                var A = !1;
                                for (var I in qA) A || (A = !0, K("still waiting on run dependencies:")), K("dependency: " + I);
                                A && K("(end of list)")
                            }), 1e4))) : K("warning: run dependency added without ID")
                        }

                        function dA(A) {
                            if (HA--, k.monitorRunDependencies && k.monitorRunDependencies(HA), A ? (T(qA[A]), delete qA[A]) : K("warning: run dependency removed without ID"), 0 == HA && (null !== YA && (clearInterval(YA), YA = null), nA)) {
                                var I = nA;
                                nA = null, I()
                            }
                        }

                        function lA(A) {
                            throw k.onAbort && k.onAbort(A), K(A += ""), O = !0, A = "abort(" + A + ") at " + $A(), new WebAssembly.RuntimeError(A)
                        }

                        function pA(A, I) {
                            return String.prototype.startsWith ? A.startsWith(I) : 0 === A.indexOf(I)
                        }
                        k.preloadedImages = {}, k.preloadedAudios = {};
                        var fA = "data:application/octet-stream;base64,";

                        function OA(A) {
                            return pA(A, fA)
                        }
                        var TA = "file://";

                        function ZA(A) {
                            return pA(A, TA)
                        }

                        function bA(A, I) {
                            return function() {
                                var g = A,
                                    C = I;
                                return I || (C = k.asm), T(aA, "native function `" + g + "` called before runtime initialization"), T(!UA, "native function `" + g + "` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), C[A] || T(C[A], "exported native function `" + g + "` not found"), C[A].apply(null, arguments)
                            }
                        }
                        var mA, XA, PA = "data:application/octet-stream;base64,

                        function uA() {
                            try {
                                if (q) return new Uint8Array(q);
                                var A = mI(PA);
                                if (A) return A;
                                if (M) return M(PA);
                                throw "both async and sync fetching of the wasm failed"
                            } catch (A) {
                                lA(A)
                            }
                        }

                        function xA() {
                            return q || !U && !N || "function" != typeof fetch || ZA(PA) ? Promise.resolve().then(uA) : fetch(PA, {
                                credentials: "same-origin"
                            }).then((function(A) {
                                if (!A.ok) throw "failed to load wasm binary file at '" + PA + "'";
                                return A.arrayBuffer()
                            })).catch((function() {
                                return uA()
                            }))
                        }

                        function WA() {
                            var A = {
                                env: PI,
                                wasi_snapshot_preview1: PI
                            };

                            function I(A, I) {
                                var g = A.exports;
                                k.asm = g, dA("wasm-instantiate")
                            }
                            LA("wasm-instantiate");
                            var g = k;

                            function C(A) {
                                T(k === g, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"), g = null, I(A.instance)
                            }

                            function Q(I) {
                                return xA().then((function(I) {
                                    return WebAssembly.instantiate(I, A)
                                })).then(I, (function(A) {
                                    K("failed to asynchronously prepare wasm: " + A), lA(A)
                                }))
                            }
                            if (k.instantiateWasm) try {
                                return k.instantiateWasm(A, I)
                            } catch (A) {
                                return K("Module.instantiateWasm callback failed with error: " + A), !1
                            }
                            return function() {
                                if (q || "function" != typeof WebAssembly.instantiateStreaming || OA(PA) || ZA(PA) || "function" != typeof fetch) return Q(C);
                                fetch(PA, {
                                    credentials: "same-origin"
                                }).then((function(I) {
                                    return WebAssembly.instantiateStreaming(I, A).then(C, (function(A) {
                                        return K("wasm streaming compile failed: " + A), K("falling back to ArrayBuffer instantiation"), Q(C)
                                    }))
                                }))
                            }(), {}
                        }
                        OA(PA) || (PA = c(PA));
                        var VA = {
                            1056: function(A, I, g, C) {
                                k.draw_out(A, I, g, C)
                            },
                            1101: function() {
                                console && console.time && console.time("program")
                            },
                            1207: function() {
                                console && console.time && console.timeEnd("program")
                            },
                            1603: function() {
                                return k.tileW || 0
                            },
                            1633: function() {
                                return k.tileH || 0
                            },
                            1663: function() {
                                return k.tileX || 0
                            },
                            1693: function() {
                                return k.tileY || 0
                            },
                            2137: function(A, I) {
                                var g = k.Pointer_stringify(A),
                                    C = k.Pointer_stringify(I);
                                return k.images = k.images || {}, k.images[g] = C, console.log("Storing an image in ", g, C), 0
                            },
                            7370: function(A) {
                                var I = k.Pointer_stringify(A);
                                if (k.loadedImages = k.loadedImages || {}, void 0 === k.loadedImages[I]) {
                                    console.time && console.time("loading " + I + " from base64");
                                    var g = k.images[I],
                                        C = new Uint8Array(atob(g).split("").map((function(A) {
                                            return A.charCodeAt(0)
                                        }))),
                                        Q = new i(C),
                                        B = Q.decodePixels();
                                    k.loadedImages[I] = new Object, k.loadedImages[I].pixels = B, k.loadedImages[I].height = Q.height, k.loadedImages[I].width = Q.width, k.loadedImages[I].length = B.length, console.timeEnd && console.timeEnd("loading " + I + " from base64")
                                }
                            },
                            8136: function(A) {
                                return k.loadedImages[Pointer_stringify(A)].width
                            },
                            8197: function(A) {
                                return k.loadedImages[Pointer_stringify(A)].height
                            },
                            8259: function(A, I, g) {
                                var C = k.Pointer_stringify(A),
                                    Q = k.loadedImages[C];
                                console.assert && console.assert(Q, C + "Was not loaded yet!"), console.assert && console.assert(Q.pixels.length === g, "Expected image length(1) does not match actual PNG length(2)", g, Q.pixels.length), k.writeArrayToMemory(Q.pixels, I)
                            }
                        };

                        function jA(A) {
                            for (; A.length > 0;) {
                                var I = A.shift();
                                if ("function" != typeof I) {
                                    var g = I.func;
                                    "number" == typeof g ? void 0 === I.arg ? f.get(g)() : f.get(g)(I.arg) : g(void 0 === I.arg ? null : I.arg)
                                } else I(k)
                            }
                        }

                        function vA(A) {
                            return n("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"), A
                        }

                        function zA(A) {
                            return A.replace(/\b_Z[\w\d_]+/g, (function(A) {
                                var I = vA(A);
                                return A === I ? A : I + " [" + A + "]"
                            }))
                        }

                        function _A() {
                            var A = new Error;
                            if (!A.stack) {
                                try {
                                    throw new Error
                                } catch (I) {
                                    A = I
                                }
                                if (!A.stack) return "(no stack trace available)"
                            }
                            return A.stack.toString()
                        }

                        function $A() {
                            var A = _A();
                            return k.extraStackTrace && (A += "\n" + k.extraStackTrace()), zA(A)
                        }

                        function AI(A, I, g, C) {
                            lA("Assertion failed: " + m(A) + ", at: " + [I ? m(I) : "unknown filename", g, C ? m(C) : "unknown function"])
                        }

                        function II(A, I) {}

                        function gI(A) {
                            return z[WI() >> 2] = A, A
                        }
                        GA.push({
                            func: function() {
                                uI()
                            }
                        });
                        var CI = {
                                splitPath: function(A) {
                                    return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)
                                },
                                normalizeArray: function(A, I) {
                                    for (var g = 0, C = A.length - 1; C >= 0; C--) {
                                        var Q = A[C];
                                        "." === Q ? A.splice(C, 1) : ".." === Q ? (A.splice(C, 1), g++) : g && (A.splice(C, 1), g--)
                                    }
                                    if (I)
                                        for (; g; g--) A.unshift("..");
                                    return A
                                },
                                normalize: function(A) {
                                    var I = "/" === A.charAt(0),
                                        g = "/" === A.substr(-1);
                                    return (A = CI.normalizeArray(A.split("/").filter((function(A) {
                                        return !!A
                                    })), !I).join("/")) || I || (A = "."), A && g && (A += "/"), (I ? "/" : "") + A
                                },
                                dirname: function(A) {
                                    var I = CI.splitPath(A),
                                        g = I[0],
                                        C = I[1];
                                    return g || C ? (C && (C = C.substr(0, C.length - 1)), g + C) : "."
                                },
                                basename: function(A) {
                                    if ("/" === A) return "/";
                                    var I = (A = (A = CI.normalize(A)).replace(/\/$/, "")).lastIndexOf("/");
                                    return -1 === I ? A : A.substr(I + 1)
                                },
                                extname: function(A) {
                                    return CI.splitPath(A)[3]
                                },
                                join: function() {
                                    var A = Array.prototype.slice.call(arguments, 0);
                                    return CI.normalize(A.join("/"))
                                },
                                join2: function(A, I) {
                                    return CI.normalize(A + "/" + I)
                                }
                            },
                            QI = {
                                resolve: function() {
                                    for (var A = "", I = !1, g = arguments.length - 1; g >= -1 && !I; g--) {
                                        var C = g >= 0 ? arguments[g] : oI.cwd();
                                        if ("string" != typeof C) throw new TypeError("Arguments to path.resolve must be strings");
                                        if (!C) return "";
                                        A = C + "/" + A, I = "/" === C.charAt(0)
                                    }
                                    return (I ? "/" : "") + (A = CI.normalizeArray(A.split("/").filter((function(A) {
                                        return !!A
                                    })), !I).join("/")) || "."
                                },
                                relative: function(A, I) {
                                    function g(A) {
                                        for (var I = 0; I < A.length && "" === A[I]; I++);
                                        for (var g = A.length - 1; g >= 0 && "" === A[g]; g--);
                                        return I > g ? [] : A.slice(I, g - I + 1)
                                    }
                                    A = QI.resolve(A).substr(1), I = QI.resolve(I).substr(1);
                                    for (var C = g(A.split("/")), Q = g(I.split("/")), B = Math.min(C.length, Q.length), E = B, i = 0; i < B; i++)
                                        if (C[i] !== Q[i]) {
                                            E = i;
                                            break
                                        } var D = [];
                                    for (i = E; i < C.length; i++) D.push("..");
                                    return (D = D.concat(Q.slice(E))).join("/")
                                }
                            },
                            BI = {
                                ttys: [],
                                init: function() {},
                                shutdown: function() {},
                                register: function(A, I) {
                                    BI.ttys[A] = {
                                        input: [],
                                        output: [],
                                        ops: I
                                    }, oI.registerDevice(A, BI.stream_ops)
                                },
                                stream_ops: {
                                    open: function(A) {
                                        var I = BI.ttys[A.node.rdev];
                                        if (!I) throw new oI.ErrnoError(43);
                                        A.tty = I, A.seekable = !1
                                    },
                                    close: function(A) {
                                        A.tty.ops.flush(A.tty)
                                    },
                                    flush: function(A) {
                                        A.tty.ops.flush(A.tty)
                                    },
                                    read: function(A, I, g, C, Q) {
                                        if (!A.tty || !A.tty.ops.get_char) throw new oI.ErrnoError(60);
                                        for (var B = 0, E = 0; E < C; E++) {
                                            var i;
                                            try {
                                                i = A.tty.ops.get_char(A.tty)
                                            } catch (A) {
                                                throw new oI.ErrnoError(29)
                                            }
                                            if (void 0 === i && 0 === B) throw new oI.ErrnoError(6);
                                            if (null == i) break;
                                            B++, I[g + E] = i
                                        }
                                        return B && (A.node.timestamp = Date.now()), B
                                    },
                                    write: function(A, I, g, C, Q) {
                                        if (!A.tty || !A.tty.ops.put_char) throw new oI.ErrnoError(60);
                                        try {
                                            for (var B = 0; B < C; B++) A.tty.ops.put_char(A.tty, I[g + B])
                                        } catch (A) {
                                            throw new oI.ErrnoError(29)
                                        }
                                        return C && (A.node.timestamp = Date.now()), B
                                    }
                                },
                                default_tty_ops: {
                                    get_char: function(A) {
                                        if (!A.input.length) {
                                            var I = null;
                                            if (h) {
                                                var g = Buffer.alloc ? Buffer.alloc(256) : new Buffer(256),
                                                    C = 0;
                                                try {
                                                    C = t.readSync(process.stdin.fd, g, 0, 256, null)
                                                } catch (A) {
                                                    if (-1 == A.toString().indexOf("EOF")) throw A;
                                                    C = 0
                                                }
                                                I = C > 0 ? g.slice(0, C).toString("utf-8") : null
                                            } else "undefined" != typeof window && "function" == typeof window.prompt ? null !== (I = window.prompt("Input: ")) && (I += "\n") : "function" == typeof readline && null !== (I = readline()) && (I += "\n");
                                            if (!I) return null;
                                            A.input = OI(I, !0)
                                        }
                                        return A.input.shift()
                                    },
                                    put_char: function(A, I) {
                                        null === I || 10 === I ? (R(b(A.output, 0)), A.output = []) : 0 != I && A.output.push(I)
                                    },
                                    flush: function(A) {
                                        A.output && A.output.length > 0 && (R(b(A.output, 0)), A.output = [])
                                    }
                                },
                                default_tty1_ops: {
                                    put_char: function(A, I) {
                                        null === I || 10 === I ? (K(b(A.output, 0)), A.output = []) : 0 != I && A.output.push(I)
                                    },
                                    flush: function(A) {
                                        A.output && A.output.length > 0 && (K(b(A.output, 0)), A.output = [])
                                    }
                                }
                            },
                            EI = {
                                ops_table: null,
                                mount: function(A) {
                                    return EI.createNode(null, "/", 16895, 0)
                                },
                                createNode: function(A, I, g, C) {
                                    if (oI.isBlkdev(g) || oI.isFIFO(g)) throw new oI.ErrnoError(63);
                                    EI.ops_table || (EI.ops_table = {
                                        dir: {
                                            node: {
                                                getattr: EI.node_ops.getattr,
                                                setattr: EI.node_ops.setattr,
                                                lookup: EI.node_ops.lookup,
                                                mknod: EI.node_ops.mknod,
                                                rename: EI.node_ops.rename,
                                                unlink: EI.node_ops.unlink,
                                                rmdir: EI.node_ops.rmdir,
                                                readdir: EI.node_ops.readdir,
                                                symlink: EI.node_ops.symlink
                                            },
                                            stream: {
                                                llseek: EI.stream_ops.llseek
                                            }
                                        },
                                        file: {
                                            node: {
                                                getattr: EI.node_ops.getattr,
                                                setattr: EI.node_ops.setattr
                                            },
                                            stream: {
                                                llseek: EI.stream_ops.llseek,
                                                read: EI.stream_ops.read,
                                                write: EI.stream_ops.write,
                                                allocate: EI.stream_ops.allocate,
                                                mmap: EI.stream_ops.mmap,
                                                msync: EI.stream_ops.msync
                                            }
                                        },
                                        link: {
                                            node: {
                                                getattr: EI.node_ops.getattr,
                                                setattr: EI.node_ops.setattr,
                                                readlink: EI.node_ops.readlink
                                            },
                                            stream: {}
                                        },
                                        chrdev: {
                                            node: {
                                                getattr: EI.node_ops.getattr,
                                                setattr: EI.node_ops.setattr
                                            },
                                            stream: oI.chrdev_stream_ops
                                        }
                                    });
                                    var Q = oI.createNode(A, I, g, C);
                                    return oI.isDir(Q.mode) ? (Q.node_ops = EI.ops_table.dir.node, Q.stream_ops = EI.ops_table.dir.stream, Q.contents = {}) : oI.isFile(Q.mode) ? (Q.node_ops = EI.ops_table.file.node, Q.stream_ops = EI.ops_table.file.stream, Q.usedBytes = 0, Q.contents = null) : oI.isLink(Q.mode) ? (Q.node_ops = EI.ops_table.link.node, Q.stream_ops = EI.ops_table.link.stream) : oI.isChrdev(Q.mode) && (Q.node_ops = EI.ops_table.chrdev.node, Q.stream_ops = EI.ops_table.chrdev.stream), Q.timestamp = Date.now(), A && (A.contents[I] = Q), Q
                                },
                                getFileDataAsRegularArray: function(A) {
                                    if (A.contents && A.contents.subarray) {
                                        for (var I = [], g = 0; g < A.usedBytes; ++g) I.push(A.contents[g]);
                                        return I
                                    }
                                    return A.contents
                                },
                                getFileDataAsTypedArray: function(A) {
                                    return A.contents ? A.contents.subarray ? A.contents.subarray(0, A.usedBytes) : new Uint8Array(A.contents) : new Uint8Array(0)
                                },
                                expandFileStorage: function(A, I) {
                                    var g = A.contents ? A.contents.length : 0;
                                    if (!(g >= I)) {
                                        I = Math.max(I, g * (g < 1048576 ? 2 : 1.125) >>> 0), 0 != g && (I = Math.max(I, 256));
                                        var C = A.contents;
                                        A.contents = new Uint8Array(I), A.usedBytes > 0 && A.contents.set(C.subarray(0, A.usedBytes), 0)
                                    }
                                },
                                resizeFileStorage: function(A, I) {
                                    if (A.usedBytes != I) {
                                        if (0 == I) return A.contents = null, void(A.usedBytes = 0);
                                        if (!A.contents || A.contents.subarray) {
                                            var g = A.contents;
                                            return A.contents = new Uint8Array(I), g && A.contents.set(g.subarray(0, Math.min(I, A.usedBytes))), void(A.usedBytes = I)
                                        }
                                        if (A.contents || (A.contents = []), A.contents.length > I) A.contents.length = I;
                                        else
                                            for (; A.contents.length < I;) A.contents.push(0);
                                        A.usedBytes = I
                                    }
                                },
                                node_ops: {
                                    getattr: function(A) {
                                        var I = {};
                                        return I.dev = oI.isChrdev(A.mode) ? A.id : 1, I.ino = A.id, I.mode = A.mode, I.nlink = 1, I.uid = 0, I.gid = 0, I.rdev = A.rdev, oI.isDir(A.mode) ? I.size = 4096 : oI.isFile(A.mode) ? I.size = A.usedBytes : oI.isLink(A.mode) ? I.size = A.link.length : I.size = 0, I.atime = new Date(A.timestamp), I.mtime = new Date(A.timestamp), I.ctime = new Date(A.timestamp), I.blksize = 4096, I.blocks = Math.ceil(I.size / I.blksize), I
                                    },
                                    setattr: function(A, I) {
                                        void 0 !== I.mode && (A.mode = I.mode), void 0 !== I.timestamp && (A.timestamp = I.timestamp), void 0 !== I.size && EI.resizeFileStorage(A, I.size)
                                    },
                                    lookup: function(A, I) {
                                        throw oI.genericErrors[44]
                                    },
                                    mknod: function(A, I, g, C) {
                                        return EI.createNode(A, I, g, C)
                                    },
                                    rename: function(A, I, g) {
                                        if (oI.isDir(A.mode)) {
                                            var C;
                                            try {
                                                C = oI.lookupNode(I, g)
                                            } catch (A) {}
                                            if (C)
                                                for (var Q in C.contents) throw new oI.ErrnoError(55)
                                        }
                                        delete A.parent.contents[A.name], A.name = g, I.contents[g] = A, A.parent = I
                                    },
                                    unlink: function(A, I) {
                                        delete A.contents[I]
                                    },
                                    rmdir: function(A, I) {
                                        var g = oI.lookupNode(A, I);
                                        for (var C in g.contents) throw new oI.ErrnoError(55);
                                        delete A.contents[I]
                                    },
                                    readdir: function(A) {
                                        var I = [".", ".."];
                                        for (var g in A.contents) A.contents.hasOwnProperty(g) && I.push(g);
                                        return I
                                    },
                                    symlink: function(A, I, g) {
                                        var C = EI.createNode(A, I, 41471, 0);
                                        return C.link = g, C
                                    },
                                    readlink: function(A) {
                                        if (!oI.isLink(A.mode)) throw new oI.ErrnoError(28);
                                        return A.link
                                    }
                                },
                                stream_ops: {
                                    read: function(A, I, g, C, Q) {
                                        var B = A.node.contents;
                                        if (Q >= A.node.usedBytes) return 0;
                                        var E = Math.min(A.node.usedBytes - Q, C);
                                        if (T(E >= 0), E > 8 && B.subarray) I.set(B.subarray(Q, Q + E), g);
                                        else
                                            for (var i = 0; i < E; i++) I[g + i] = B[Q + i];
                                        return E
                                    },
                                    write: function(A, I, g, C, Q, B) {
                                        if (T(!(I instanceof ArrayBuffer)), I.buffer === V.buffer && (B = !1), !C) return 0;
                                        var E = A.node;
                                        if (E.timestamp = Date.now(), I.subarray && (!E.contents || E.contents.subarray)) {
                                            if (B) return T(0 === Q, "canOwn must imply no weird position inside the file"), E.contents = I.subarray(g, g + C), E.usedBytes = C, C;
                                            if (0 === E.usedBytes && 0 === Q) return E.contents = I.slice(g, g + C), E.usedBytes = C, C;
                                            if (Q + C <= E.usedBytes) return E.contents.set(I.subarray(g, g + C), Q), C
                                        }
                                        if (EI.expandFileStorage(E, Q + C), E.contents.subarray && I.subarray) E.contents.set(I.subarray(g, g + C), Q);
                                        else
                                            for (var i = 0; i < C; i++) E.contents[Q + i] = I[g + i];
                                        return E.usedBytes = Math.max(E.usedBytes, Q + C), C
                                    },
                                    llseek: function(A, I, g) {
                                        var C = I;
                                        if (1 === g ? C += A.position : 2 === g && oI.isFile(A.node.mode) && (C += A.node.usedBytes), C < 0) throw new oI.ErrnoError(28);
                                        return C
                                    },
                                    allocate: function(A, I, g) {
                                        EI.expandFileStorage(A.node, I + g), A.node.usedBytes = Math.max(A.node.usedBytes, I + g)
                                    },
                                    mmap: function(A, I, g, C, Q, B) {
                                        if (T(0 === I), !oI.isFile(A.node.mode)) throw new oI.ErrnoError(43);
                                        var E, i, D = A.node.contents;
                                        if (2 & B || D.buffer !== W) {
                                            if ((C > 0 || C + g < D.length) && (D = D.subarray ? D.subarray(C, C + g) : Array.prototype.slice.call(D, C, C + g)), i = !0, !(E = oI.mmapAlloc(g))) throw new oI.ErrnoError(48);
                                            V.set(D, E)
                                        } else i = !1, E = D.byteOffset;
                                        return {
                                            ptr: E,
                                            allocated: i
                                        }
                                    },
                                    msync: function(A, I, g, C, Q) {
                                        if (!oI.isFile(A.node.mode)) throw new oI.ErrnoError(43);
                                        return 2 & Q || EI.stream_ops.write(A, I, 0, C, g, !1), 0
                                    }
                                }
                            },
                            iI = {
                                0: "Success",
                                1: "Arg list too long",
                                2: "Permission denied",
                                3: "Address already in use",
                                4: "Address not available",
                                5: "Address family not supported by protocol family",
                                6: "No more processes",
                                7: "Socket already connected",
                                8: "Bad file number",
                                9: "Trying to read unreadable message",
                                10: "Mount device busy",
                                11: "Operation canceled",
                                12: "No children",
                                13: "Connection aborted",
                                14: "Connection refused",
                                15: "Connection reset by peer",
                                16: "File locking deadlock error",
                                17: "Destination address required",
                                18: "Math arg out of domain of func",
                                19: "Quota exceeded",
                                20: "File exists",
                                21: "Bad address",
                                22: "File too large",
                                23: "Host is unreachable",
                                24: "Identifier removed",
                                25: "Illegal byte sequence",
                                26: "Connection already in progress",
                                27: "Interrupted system call",
                                28: "Invalid argument",
                                29: "I/O error",
                                30: "Socket is already connected",
                                31: "Is a directory",
                                32: "Too many symbolic links",
                                33: "Too many open files",
                                34: "Too many links",
                                35: "Message too long",
                                36: "Multihop attempted",
                                37: "File or path name too long",
                                38: "Network interface is not configured",
                                39: "Connection reset by network",
                                40: "Network is unreachable",
                                41: "Too many open files in system",
                                42: "No buffer space available",
                                43: "No such device",
                                44: "No such file or directory",
                                45: "Exec format error",
                                46: "No record locks available",
                                47: "The link has been severed",
                                48: "Not enough core",
                                49: "No message of desired type",
                                50: "Protocol not available",
                                51: "No space left on device",
                                52: "Function not implemented",
                                53: "Socket is not connected",
                                54: "Not a directory",
                                55: "Directory not empty",
                                56: "State not recoverable",
                                57: "Socket operation on non-socket",
                                59: "Not a typewriter",
                                60: "No such device or address",
                                61: "Value too large for defined data type",
                                62: "Previous owner died",
                                63: "Not super-user",
                                64: "Broken pipe",
                                65: "Protocol error",
                                66: "Unknown protocol",
                                67: "Protocol wrong type for socket",
                                68: "Math result not representable",
                                69: "Read only file system",
                                70: "Illegal seek",
                                71: "No such process",
                                72: "Stale file handle",
                                73: "Connection timed out",
                                74: "Text file busy",
                                75: "Cross-device link",
                                100: "Device not a stream",
                                101: "Bad font file fmt",
                                102: "Invalid slot",
                                103: "Invalid request code",
                                104: "No anode",
                                105: "Block device required",
                                106: "Channel number out of range",
                                107: "Level 3 halted",
                                108: "Level 3 reset",
                                109: "Link number out of range",
                                110: "Protocol driver not attached",
                                111: "No CSI structure available",
                                112: "Level 2 halted",
                                113: "Invalid exchange",
                                114: "Invalid request descriptor",
                                115: "Exchange full",
                                116: "No data (for no delay io)",
                                117: "Timer expired",
                                118: "Out of streams resources",
                                119: "Machine is not on the network",
                                120: "Package not installed",
                                121: "The object is remote",
                                122: "Advertise error",
                                123: "Srmount error",
                                124: "Communication error on send",
                                125: "Cross mount point (not really error)",
                                126: "Given log. name not unique",
                                127: "f.d. invalid for this operation",
                                128: "Remote address changed",
                                129: "Can   access a needed shared lib",
                                130: "Accessing a corrupted shared lib",
                                131: ".lib section in a.out corrupted",
                                132: "Attempting to link in too many libs",
                                133: "Attempting to exec a shared library",
                                135: "Streams pipe error",
                                136: "Too many users",
                                137: "Socket type not supported",
                                138: "Not supported",
                                139: "Protocol family not supported",
                                140: "Can't send after socket shutdown",
                                141: "Too many references",
                                142: "Host is down",
                                148: "No medium (in tape drive)",
                                156: "Level 2 not synchronized"
                            },
                            DI = {
                                EPERM: 63,
                                ENOENT: 44,
                                ESRCH: 71,
                                EINTR: 27,
                                EIO: 29,
                                ENXIO: 60,
                                E2BIG: 1,
                                ENOEXEC: 45,
                                EBADF: 8,
                                ECHILD: 12,
                                EAGAIN: 6,
                                EWOULDBLOCK: 6,
                                ENOMEM: 48,
                                EACCES: 2,
                                EFAULT: 21,
                                ENOTBLK: 105,
                                EBUSY: 10,
                                EEXIST: 20,
                                EXDEV: 75,
                                ENODEV: 43,
                                ENOTDIR: 54,
                                EISDIR: 31,
                                EINVAL: 28,
                                ENFILE: 41,
                                EMFILE: 33,
                                ENOTTY: 59,
                                ETXTBSY: 74,
                                EFBIG: 22,
                                ENOSPC: 51,
                                ESPIPE: 70,
                                EROFS: 69,
                                EMLINK: 34,
                                EPIPE: 64,
                                EDOM: 18,
                                ERANGE: 68,
                                ENOMSG: 49,
                                EIDRM: 24,
                                ECHRNG: 106,
                                EL2NSYNC: 156,
                                EL3HLT: 107,
                                EL3RST: 108,
                                ELNRNG: 109,
                                EUNATCH: 110,
                                ENOCSI: 111,
                                EL2HLT: 112,
                                EDEADLK: 16,
                                ENOLCK: 46,
                                EBADE: 113,
                                EBADR: 114,
                                EXFULL: 115,
                                ENOANO: 104,
                                EBADRQC: 103,
                                EBADSLT: 102,
                                EDEADLOCK: 16,
                                EBFONT: 101,
                                ENOSTR: 100,
                                ENODATA: 116,
                                ETIME: 117,
                                ENOSR: 118,
                                ENONET: 119,
                                ENOPKG: 120,
                                EREMOTE: 121,
                                ENOLINK: 47,
                                EADV: 122,
                                ESRMNT: 123,
                                ECOMM: 124,
                                EPROTO: 65,
                                EMULTIHOP: 36,
                                EDOTDOT: 125,
                                EBADMSG: 9,
                                ENOTUNIQ: 126,
                                EBADFD: 127,
                                EREMCHG: 128,
                                ELIBACC: 129,
                                ELIBBAD: 130,
                                ELIBSCN: 131,
                                ELIBMAX: 132,
                                ELIBEXEC: 133,
                                ENOSYS: 52,
                                ENOTEMPTY: 55,
                                ENAMETOOLONG: 37,
                                ELOOP: 32,
                                EOPNOTSUPP: 138,
                                EPFNOSUPPORT: 139,
                                ECONNRESET: 15,
                                ENOBUFS: 42,
                                EAFNOSUPPORT: 5,
                                EPROTOTYPE: 67,
                                ENOTSOCK: 57,
                                ENOPROTOOPT: 50,
                                ESHUTDOWN: 140,
                                ECONNREFUSED: 14,
                                EADDRINUSE: 3,
                                ECONNABORTED: 13,
                                ENETUNREACH: 40,
                                ENETDOWN: 38,
                                ETIMEDOUT: 73,
                                EHOSTDOWN: 142,
                                EHOSTUNREACH: 23,
                                EINPROGRESS: 26,
                                EALREADY: 7,
                                EDESTADDRREQ: 17,
                                EMSGSIZE: 35,
                                EPROTONOSUPPORT: 66,
                                ESOCKTNOSUPPORT: 137,
                                EADDRNOTAVAIL: 4,
                                ENETRESET: 39,
                                EISCONN: 30,
                                ENOTCONN: 53,
                                ETOOMANYREFS: 141,
                                EUSERS: 136,
                                EDQUOT: 19,
                                ESTALE: 72,
                                ENOTSUP: 138,
                                ENOMEDIUM: 148,
                                EILSEQ: 25,
                                EOVERFLOW: 61,
                                ECANCELED: 11,
                                ENOTRECOVERABLE: 56,
                                EOWNERDEAD: 62,
                                ESTRPIPE: 135
                            },
                            oI = {
                                root: null,
                                mounts: [],
                                devices: {},
                                streams: [],
                                nextInode: 1,
                                nameTable: null,
                                currentPath: "/",
                                initialized: !1,
                                ignorePermissions: !0,
                                trackingDelegate: {},
                                tracking: {
                                    openFlags: {
                                        READ: 1,
                                        WRITE: 2
                                    }
                                },
                                ErrnoError: null,
                                genericErrors: {},
                                filesystems: null,
                                syncFSRequests: 0,
                                handleFSError: function(A) {
                                    if (!(A instanceof oI.ErrnoError)) throw A + " : " + $A();
                                    return gI(A.errno)
                                },
                                lookupPath: function(A, I) {
                                    if (I = I || {}, !(A = QI.resolve(oI.cwd(), A))) return {
                                        path: "",
                                        node: null
                                    };
                                    var g = {
                                        follow_mount: !0,
                                        recurse_count: 0
                                    };
                                    for (var C in g) void 0 === I[C] && (I[C] = g[C]);
                                    if (I.recurse_count > 8) throw new oI.ErrnoError(32);
                                    for (var Q = CI.normalizeArray(A.split("/").filter((function(A) {
                                            return !!A
                                        })), !1), B = oI.root, E = "/", i = 0; i < Q.length; i++) {
                                        var D = i === Q.length - 1;
                                        if (D && I.parent) break;
                                        if (B = oI.lookupNode(B, Q[i]), E = CI.join2(E, Q[i]), oI.isMountpoint(B) && (!D || D && I.follow_mount) && (B = B.mounted.root), !D || I.follow)
                                            for (var o = 0; oI.isLink(B.mode);) {
                                                var w = oI.readlink(E);
                                                if (E = QI.resolve(CI.dirname(E), w), B = oI.lookupPath(E, {
                                                        recurse_count: I.recurse_count
                                                    }).node, o++ > 40) throw new oI.ErrnoError(32)
                                            }
                                    }
                                    return {
                                        path: E,
                                        node: B
                                    }
                                },
                                getPath: function(A) {
                                    for (var I;;) {
                                        if (oI.isRoot(A)) {
                                            var g = A.mount.mountpoint;
                                            return I ? "/" !== g[g.length - 1] ? g + "/" + I : g + I : g
                                        }
                                        I = I ? A.name + "/" + I : A.name, A = A.parent
                                    }
                                },
                                hashName: function(A, I) {
                                    for (var g = 0, C = 0; C < I.length; C++) g = (g << 5) - g + I.charCodeAt(C) | 0;
                                    return (A + g >>> 0) % oI.nameTable.length
                                },
                                hashAddNode: function(A) {
                                    var I = oI.hashName(A.parent.id, A.name);
                                    A.name_next = oI.nameTable[I], oI.nameTable[I] = A
                                },
                                hashRemoveNode: function(A) {
                                    var I = oI.hashName(A.parent.id, A.name);
                                    if (oI.nameTable[I] === A) oI.nameTable[I] = A.name_next;
                                    else
                                        for (var g = oI.nameTable[I]; g;) {
                                            if (g.name_next === A) {
                                                g.name_next = A.name_next;
                                                break
                                            }
                                            g = g.name_next
                                        }
                                },
                                lookupNode: function(A, I) {
                                    var g = oI.mayLookup(A);
                                    if (g) throw new oI.ErrnoError(g, A);
                                    for (var C = oI.hashName(A.id, I), Q = oI.nameTable[C]; Q; Q = Q.name_next) {
                                        var B = Q.name;
                                        if (Q.parent.id === A.id && B === I) return Q
                                    }
                                    return oI.lookup(A, I)
                                },
                                createNode: function(A, I, g, C) {
                                    var Q = new oI.FSNode(A, I, g, C);
                                    return oI.hashAddNode(Q), Q
                                },
                                destroyNode: function(A) {
                                    oI.hashRemoveNode(A)
                                },
                                isRoot: function(A) {
                                    return A === A.parent
                                },
                                isMountpoint: function(A) {
                                    return !!A.mounted
                                },
                                isFile: function(A) {
                                    return 32768 == (61440 & A)
                                },
                                isDir: function(A) {
                                    return 16384 == (61440 & A)
                                },
                                isLink: function(A) {
                                    return 40960 == (61440 & A)
                                },
                                isChrdev: function(A) {
                                    return 8192 == (61440 & A)
                                },
                                isBlkdev: function(A) {
                                    return 24576 == (61440 & A)
                                },
                                isFIFO: function(A) {
                                    return 4096 == (61440 & A)
                                },
                                isSocket: function(A) {
                                    return 49152 == (49152 & A)
                                },
                                flagModes: {
                                    r: 0,
                                    rs: 1052672,
                                    "r+": 2,
                                    w: 577,
                                    wx: 705,
                                    xw: 705,
                                    "w+": 578,
                                    "wx+": 706,
                                    "xw+": 706,
                                    a: 1089,
                                    ax: 1217,
                                    xa: 1217,
                                    "a+": 1090,
                                    "ax+": 1218,
                                    "xa+": 1218
                                },
                                modeStringToFlags: function(A) {
                                    var I = oI.flagModes[A];
                                    if (void 0 === I) throw new Error("Unknown file open mode: " + A);
                                    return I
                                },
                                flagsToPermissionString: function(A) {
                                    var I = ["r", "w", "rw"][3 & A];
                                    return 512 & A && (I += "w"), I
                                },
                                nodePermissions: function(A, I) {
                                    return oI.ignorePermissions || (-1 === I.indexOf("r") || 292 & A.mode) && (-1 === I.indexOf("w") || 146 & A.mode) && (-1 === I.indexOf("x") || 73 & A.mode) ? 0 : 2
                                },
                                mayLookup: function(A) {
                                    return oI.nodePermissions(A, "x") || (A.node_ops.lookup ? 0 : 2)
                                },
                                mayCreate: function(A, I) {
                                    try {
                                        return oI.lookupNode(A, I), 20
                                    } catch (A) {}
                                    return oI.nodePermissions(A, "wx")
                                },
                                mayDelete: function(A, I, g) {
                                    var C;
                                    try {
                                        C = oI.lookupNode(A, I)
                                    } catch (A) {
                                        return A.errno
                                    }
                                    var Q = oI.nodePermissions(A, "wx");
                                    if (Q) return Q;
                                    if (g) {
                                        if (!oI.isDir(C.mode)) return 54;
                                        if (oI.isRoot(C) || oI.getPath(C) === oI.cwd()) return 10
                                    } else if (oI.isDir(C.mode)) return 31;
                                    return 0
                                },
                                mayOpen: function(A, I) {
                                    return A ? oI.isLink(A.mode) ? 32 : oI.isDir(A.mode) && ("r" !== oI.flagsToPermissionString(I) || 512 & I) ? 31 : oI.nodePermissions(A, oI.flagsToPermissionString(I)) : 44
                                },
                                MAX_OPEN_FDS: 4096,
                                nextfd: function(A, I) {
                                    A = A || 0, I = I || oI.MAX_OPEN_FDS;
                                    for (var g = A; g <= I; g++)
                                        if (!oI.streams[g]) return g;
                                    throw new oI.ErrnoError(33)
                                },
                                getStream: function(A) {
                                    return oI.streams[A]
                                },
                                createStream: function(A, I, g) {
                                    oI.FSStream || (oI.FSStream = function() {}, oI.FSStream.prototype = {
                                        object: {
                                            get: function() {
                                                return this.node
                                            },
                                            set: function(A) {
                                                this.node = A
                                            }
                                        },
                                        isRead: {
                                            get: function() {
                                                return 1 != (2097155 & this.flags)
                                            }
                                        },
                                        isWrite: {
                                            get: function() {
                                                return 0 != (2097155 & this.flags)
                                            }
                                        },
                                        isAppend: {
                                            get: function() {
                                                return 1024 & this.flags
                                            }
                                        }
                                    });
                                    var C = new oI.FSStream;
                                    for (var Q in A) C[Q] = A[Q];
                                    A = C;
                                    var B = oI.nextfd(I, g);
                                    return A.fd = B, oI.streams[B] = A, A
                                },
                                closeStream: function(A) {
                                    oI.streams[A] = null
                                },
                                chrdev_stream_ops: {
                                    open: function(A) {
                                        var I = oI.getDevice(A.node.rdev);
                                        A.stream_ops = I.stream_ops, A.stream_ops.open && A.stream_ops.open(A)
                                    },
                                    llseek: function() {
                                        throw new oI.ErrnoError(70)
                                    }
                                },
                                major: function(A) {
                                    return A >> 8
                                },
                                minor: function(A) {
                                    return 255 & A
                                },
                                makedev: function(A, I) {
                                    return A << 8 | I
                                },
                                registerDevice: function(A, I) {
                                    oI.devices[A] = {
                                        stream_ops: I
                                    }
                                },
                                getDevice: function(A) {
                                    return oI.devices[A]
                                },
                                getMounts: function(A) {
                                    for (var I = [], g = [A]; g.length;) {
                                        var C = g.pop();
                                        I.push(C), g.push.apply(g, C.mounts)
                                    }
                                    return I
                                },
                                syncfs: function(A, I) {
                                    "function" == typeof A && (I = A, A = !1), oI.syncFSRequests++, oI.syncFSRequests > 1 && K("warning: " + oI.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
                                    var g = oI.getMounts(oI.root.mount),
                                        C = 0;

                                    function Q(A) {
                                        return T(oI.syncFSRequests > 0), oI.syncFSRequests--, I(A)
                                    }

                                    function B(A) {
                                        if (A) return B.errored ? void 0 : (B.errored = !0, Q(A));
                                        ++C >= g.length && Q(null)
                                    }
                                    g.forEach((function(I) {
                                        if (!I.type.syncfs) return B(null);
                                        I.type.syncfs(I, A, B)
                                    }))
                                },
                                mount: function(A, I, g) {
                                    if ("string" == typeof A) throw A;
                                    var C, Q = "/" === g,
                                        B = !g;
                                    if (Q && oI.root) throw new oI.ErrnoError(10);
                                    if (!Q && !B) {
                                        var E = oI.lookupPath(g, {
                                            follow_mount: !1
                                        });
                                        if (g = E.path, C = E.node, oI.isMountpoint(C)) throw new oI.ErrnoError(10);
                                        if (!oI.isDir(C.mode)) throw new oI.ErrnoError(54)
                                    }
                                    var i = {
                                            type: A,
                                            opts: I,
                                            mountpoint: g,
                                            mounts: []
                                        },
                                        D = A.mount(i);
                                    return D.mount = i, i.root = D, Q ? oI.root = D : C && (C.mounted = i, C.mount && C.mount.mounts.push(i)), D
                                },
                                unmount: function(A) {
                                    var I = oI.lookupPath(A, {
                                        follow_mount: !1
                                    });
                                    if (!oI.isMountpoint(I.node)) throw new oI.ErrnoError(28);
                                    var g = I.node,
                                        C = g.mounted,
                                        Q = oI.getMounts(C);
                                    Object.keys(oI.nameTable).forEach((function(A) {
                                        for (var I = oI.nameTable[A]; I;) {
                                            var g = I.name_next; - 1 !== Q.indexOf(I.mount) && oI.destroyNode(I), I = g
                                        }
                                    })), g.mounted = null;
                                    var B = g.mount.mounts.indexOf(C);
                                    T(-1 !== B), g.mount.mounts.splice(B, 1)
                                },
                                lookup: function(A, I) {
                                    return A.node_ops.lookup(A, I)
                                },
                                mknod: function(A, I, g) {
                                    var C = oI.lookupPath(A, {
                                            parent: !0
                                        }).node,
                                        Q = CI.basename(A);
                                    if (!Q || "." === Q || ".." === Q) throw new oI.ErrnoError(28);
                                    var B = oI.mayCreate(C, Q);
                                    if (B) throw new oI.ErrnoError(B);
                                    if (!C.node_ops.mknod) throw new oI.ErrnoError(63);
                                    return C.node_ops.mknod(C, Q, I, g)
                                },
                                create: function(A, I) {
                                    return I = void 0 !== I ? I : 438, I &= 4095, I |= 32768, oI.mknod(A, I, 0)
                                },
                                mkdir: function(A, I) {
                                    return I = void 0 !== I ? I : 511, I &= 1023, I |= 16384, oI.mknod(A, I, 0)
                                },
                                mkdirTree: function(A, I) {
                                    for (var g = A.split("/"), C = "", Q = 0; Q < g.length; ++Q)
                                        if (g[Q]) {
                                            C += "/" + g[Q];
                                            try {
                                                oI.mkdir(C, I)
                                            } catch (A) {
                                                if (20 != A.errno) throw A
                                            }
                                        }
                                },
                                mkdev: function(A, I, g) {
                                    return void 0 === g && (g = I, I = 438), I |= 8192, oI.mknod(A, I, g)
                                },
                                symlink: function(A, I) {
                                    if (!QI.resolve(A)) throw new oI.ErrnoError(44);
                                    var g = oI.lookupPath(I, {
                                        parent: !0
                                    }).node;
                                    if (!g) throw new oI.ErrnoError(44);
                                    var C = CI.basename(I),
                                        Q = oI.mayCreate(g, C);
                                    if (Q) throw new oI.ErrnoError(Q);
                                    if (!g.node_ops.symlink) throw new oI.ErrnoError(63);
                                    return g.node_ops.symlink(g, C, A)
                                },
                                rename: function(A, I) {
                                    var g, C, Q = CI.dirname(A),
                                        B = CI.dirname(I),
                                        E = CI.basename(A),
                                        i = CI.basename(I);
                                    if (g = oI.lookupPath(A, {
                                            parent: !0
                                        }).node, C = oI.lookupPath(I, {
                                            parent: !0
                                        }).node, !g || !C) throw new oI.ErrnoError(44);
                                    if (g.mount !== C.mount) throw new oI.ErrnoError(75);
                                    var D, o = oI.lookupNode(g, E),
                                        w = QI.relative(A, B);
                                    if ("." !== w.charAt(0)) throw new oI.ErrnoError(28);
                                    if ("." !== (w = QI.relative(I, Q)).charAt(0)) throw new oI.ErrnoError(55);
                                    try {
                                        D = oI.lookupNode(C, i)
                                    } catch (A) {}
                                    if (o !== D) {
                                        var k = oI.isDir(o.mode),
                                            G = oI.mayDelete(g, E, k);
                                        if (G) throw new oI.ErrnoError(G);
                                        if (G = D ? oI.mayDelete(C, i, k) : oI.mayCreate(C, i)) throw new oI.ErrnoError(G);
                                        if (!g.node_ops.rename) throw new oI.ErrnoError(63);
                                        if (oI.isMountpoint(o) || D && oI.isMountpoint(D)) throw new oI.ErrnoError(10);
                                        if (C !== g && (G = oI.nodePermissions(g, "w"))) throw new oI.ErrnoError(G);
                                        try {
                                            oI.trackingDelegate.willMovePath && oI.trackingDelegate.willMovePath(A, I)
                                        } catch (g) {
                                            K("FS.trackingDelegate['willMovePath']('" + A + "', '" + I + "') threw an exception: " + g.message)
                                        }
                                        oI.hashRemoveNode(o);
                                        try {
                                            g.node_ops.rename(o, C, i)
                                        } catch (A) {
                                            throw A
                                        } finally {
                                            oI.hashAddNode(o)
                                        }
                                        try {
                                            oI.trackingDelegate.onMovePath && oI.trackingDelegate.onMovePath(A, I)
                                        } catch (g) {
                                            K("FS.trackingDelegate['onMovePath']('" + A + "', '" + I + "') threw an exception: " + g.message)
                                        }
                                    }
                                },
                                rmdir: function(A) {
                                    var I = oI.lookupPath(A, {
                                            parent: !0
                                        }).node,
                                        g = CI.basename(A),
                                        C = oI.lookupNode(I, g),
                                        Q = oI.mayDelete(I, g, !0);
                                    if (Q) throw new oI.ErrnoError(Q);
                                    if (!I.node_ops.rmdir) throw new oI.ErrnoError(63);
                                    if (oI.isMountpoint(C)) throw new oI.ErrnoError(10);
                                    try {
                                        oI.trackingDelegate.willDeletePath && oI.trackingDelegate.willDeletePath(A)
                                    } catch (I) {
                                        K("FS.trackingDelegate['willDeletePath']('" + A + "') threw an exception: " + I.message)
                                    }
                                    I.node_ops.rmdir(I, g), oI.destroyNode(C);
                                    try {
                                        oI.trackingDelegate.onDeletePath && oI.trackingDelegate.onDeletePath(A)
                                    } catch (I) {
                                        K("FS.trackingDelegate['onDeletePath']('" + A + "') threw an exception: " + I.message)
                                    }
                                },
                                readdir: function(A) {
                                    var I = oI.lookupPath(A, {
                                        follow: !0
                                    }).node;
                                    if (!I.node_ops.readdir) throw new oI.ErrnoError(54);
                                    return I.node_ops.readdir(I)
                                },
                                unlink: function(A) {
                                    var I = oI.lookupPath(A, {
                                            parent: !0
                                        }).node,
                                        g = CI.basename(A),
                                        C = oI.lookupNode(I, g),
                                        Q = oI.mayDelete(I, g, !1);
                                    if (Q) throw new oI.ErrnoError(Q);
                                    if (!I.node_ops.unlink) throw new oI.ErrnoError(63);
                                    if (oI.isMountpoint(C)) throw new oI.ErrnoError(10);
                                    try {
                                        oI.trackingDelegate.willDeletePath && oI.trackingDelegate.willDeletePath(A)
                                    } catch (I) {
                                        K("FS.trackingDelegate['willDeletePath']('" + A + "') threw an exception: " + I.message)
                                    }
                                    I.node_ops.unlink(I, g), oI.destroyNode(C);
                                    try {
                                        oI.trackingDelegate.onDeletePath && oI.trackingDelegate.onDeletePath(A)
                                    } catch (I) {
                                        K("FS.trackingDelegate['onDeletePath']('" + A + "') threw an exception: " + I.message)
                                    }
                                },
                                readlink: function(A) {
                                    var I = oI.lookupPath(A).node;
                                    if (!I) throw new oI.ErrnoError(44);
                                    if (!I.node_ops.readlink) throw new oI.ErrnoError(28);
                                    return QI.resolve(oI.getPath(I.parent), I.node_ops.readlink(I))
                                },
                                stat: function(A, I) {
                                    var g = oI.lookupPath(A, {
                                        follow: !I
                                    }).node;
                                    if (!g) throw new oI.ErrnoError(44);
                                    if (!g.node_ops.getattr) throw new oI.ErrnoError(63);
                                    return g.node_ops.getattr(g)
                                },
                                lstat: function(A) {
                                    return oI.stat(A, !0)
                                },
                                chmod: function(A, I, g) {
                                    var C;
                                    if (!(C = "string" == typeof A ? oI.lookupPath(A, {
                                            follow: !g
                                        }).node : A).node_ops.setattr) throw new oI.ErrnoError(63);
                                    C.node_ops.setattr(C, {
                                        mode: 4095 & I | -4096 & C.mode,
                                        timestamp: Date.now()
                                    })
                                },
                                lchmod: function(A, I) {
                                    oI.chmod(A, I, !0)
                                },
                                fchmod: function(A, I) {
                                    var g = oI.getStream(A);
                                    if (!g) throw new oI.ErrnoError(8);
                                    oI.chmod(g.node, I)
                                },
                                chown: function(A, I, g, C) {
                                    var Q;
                                    if (!(Q = "string" == typeof A ? oI.lookupPath(A, {
                                            follow: !C
                                        }).node : A).node_ops.setattr) throw new oI.ErrnoError(63);
                                    Q.node_ops.setattr(Q, {
                                        timestamp: Date.now()
                                    })
                                },
                                lchown: function(A, I, g) {
                                    oI.chown(A, I, g, !0)
                                },
                                fchown: function(A, I, g) {
                                    var C = oI.getStream(A);
                                    if (!C) throw new oI.ErrnoError(8);
                                    oI.chown(C.node, I, g)
                                },
                                truncate: function(A, I) {
                                    if (I < 0) throw new oI.ErrnoError(28);
                                    var g;
                                    if (!(g = "string" == typeof A ? oI.lookupPath(A, {
                                            follow: !0
                                        }).node : A).node_ops.setattr) throw new oI.ErrnoError(63);
                                    if (oI.isDir(g.mode)) throw new oI.ErrnoError(31);
                                    if (!oI.isFile(g.mode)) throw new oI.ErrnoError(28);
                                    var C = oI.nodePermissions(g, "w");
                                    if (C) throw new oI.ErrnoError(C);
                                    g.node_ops.setattr(g, {
                                        size: I,
                                        timestamp: Date.now()
                                    })
                                },
                                ftruncate: function(A, I) {
                                    var g = oI.getStream(A);
                                    if (!g) throw new oI.ErrnoError(8);
                                    if (0 == (2097155 & g.flags)) throw new oI.ErrnoError(28);
                                    oI.truncate(g.node, I)
                                },
                                utime: function(A, I, g) {
                                    var C = oI.lookupPath(A, {
                                        follow: !0
                                    }).node;
                                    C.node_ops.setattr(C, {
                                        timestamp: Math.max(I, g)
                                    })
                                },
                                open: function(A, I, g, C, Q) {
                                    if ("" === A) throw new oI.ErrnoError(44);
                                    var B;
                                    if (g = void 0 === g ? 438 : g, g = 64 & (I = "string" == typeof I ? oI.modeStringToFlags(I) : I) ? 4095 & g | 32768 : 0, "object" == typeof A) B = A;
                                    else {
                                        A = CI.normalize(A);
                                        try {
                                            B = oI.lookupPath(A, {
                                                follow: !(131072 & I)
                                            }).node
                                        } catch (A) {}
                                    }
                                    var E = !1;
                                    if (64 & I)
                                        if (B) {
                                            if (128 & I) throw new oI.ErrnoError(20)
                                        } else B = oI.mknod(A, g, 0), E = !0;
                                    if (!B) throw new oI.ErrnoError(44);
                                    if (oI.isChrdev(B.mode) && (I &= -513), 65536 & I && !oI.isDir(B.mode)) throw new oI.ErrnoError(54);
                                    if (!E) {
                                        var i = oI.mayOpen(B, I);
                                        if (i) throw new oI.ErrnoError(i)
                                    }
                                    512 & I && oI.truncate(B, 0), I &= -131713;
                                    var D = oI.createStream({
                                        node: B,
                                        path: oI.getPath(B),
                                        flags: I,
                                        seekable: !0,
                                        position: 0,
                                        stream_ops: B.stream_ops,
                                        ungotten: [],
                                        error: !1
                                    }, C, Q);
                                    D.stream_ops.open && D.stream_ops.open(D), !k.logReadFiles || 1 & I || (oI.readFiles || (oI.readFiles = {}), A in oI.readFiles || (oI.readFiles[A] = 1, K("FS.trackingDelegate error on read file: " + A)));
                                    try {
                                        if (oI.trackingDelegate.onOpenFile) {
                                            var o = 0;
                                            1 != (2097155 & I) && (o |= oI.tracking.openFlags.READ), 0 != (2097155 & I) && (o |= oI.tracking.openFlags.WRITE), oI.trackingDelegate.onOpenFile(A, o)
                                        }
                                    } catch (I) {
                                        K("FS.trackingDelegate['onOpenFile']('" + A + "', flags) threw an exception: " + I.message)
                                    }
                                    return D
                                },
                                close: function(A) {
                                    if (oI.isClosed(A)) throw new oI.ErrnoError(8);
                                    A.getdents && (A.getdents = null);
                                    try {
                                        A.stream_ops.close && A.stream_ops.close(A)
                                    } catch (A) {
                                        throw A
                                    } finally {
                                        oI.closeStream(A.fd)
                                    }
                                    A.fd = null
                                },
                                isClosed: function(A) {
                                    return null === A.fd
                                },
                                llseek: function(A, I, g) {
                                    if (oI.isClosed(A)) throw new oI.ErrnoError(8);
                                    if (!A.seekable || !A.stream_ops.llseek) throw new oI.ErrnoError(70);
                                    if (0 != g && 1 != g && 2 != g) throw new oI.ErrnoError(28);
                                    return A.position = A.stream_ops.llseek(A, I, g), A.ungotten = [], A.position
                                },
                                read: function(A, I, g, C, Q) {
                                    if (C < 0 || Q < 0) throw new oI.ErrnoError(28);
                                    if (oI.isClosed(A)) throw new oI.ErrnoError(8);
                                    if (1 == (2097155 & A.flags)) throw new oI.ErrnoError(8);
                                    if (oI.isDir(A.node.mode)) throw new oI.ErrnoError(31);
                                    if (!A.stream_ops.read) throw new oI.ErrnoError(28);
                                    var B = void 0 !== Q;
                                    if (B) {
                                        if (!A.seekable) throw new oI.ErrnoError(70)
                                    } else Q = A.position;
                                    var E = A.stream_ops.read(A, I, g, C, Q);
                                    return B || (A.position += E), E
                                },
                                write: function(A, I, g, C, Q, B) {
                                    if (C < 0 || Q < 0) throw new oI.ErrnoError(28);
                                    if (oI.isClosed(A)) throw new oI.ErrnoError(8);
                                    if (0 == (2097155 & A.flags)) throw new oI.ErrnoError(8);
                                    if (oI.isDir(A.node.mode)) throw new oI.ErrnoError(31);
                                    if (!A.stream_ops.write) throw new oI.ErrnoError(28);
                                    A.seekable && 1024 & A.flags && oI.llseek(A, 0, 2);
                                    var E = void 0 !== Q;
                                    if (E) {
                                        if (!A.seekable) throw new oI.ErrnoError(70)
                                    } else Q = A.position;
                                    var i = A.stream_ops.write(A, I, g, C, Q, B);
                                    E || (A.position += i);
                                    try {
                                        A.path && oI.trackingDelegate.onWriteToFile && oI.trackingDelegate.onWriteToFile(A.path)
                                    } catch (I) {
                                        K("FS.trackingDelegate['onWriteToFile']('" + A.path + "') threw an exception: " + I.message)
                                    }
                                    return i
                                },
                                allocate: function(A, I, g) {
                                    if (oI.isClosed(A)) throw new oI.ErrnoError(8);
                                    if (I < 0 || g <= 0) throw new oI.ErrnoError(28);
                                    if (0 == (2097155 & A.flags)) throw new oI.ErrnoError(8);
                                    if (!oI.isFile(A.node.mode) && !oI.isDir(A.node.mode)) throw new oI.ErrnoError(43);
                                    if (!A.stream_ops.allocate) throw new oI.ErrnoError(138);
                                    A.stream_ops.allocate(A, I, g)
                                },
                                mmap: function(A, I, g, C, Q, B) {
                                    if (0 != (2 & Q) && 0 == (2 & B) && 2 != (2097155 & A.flags)) throw new oI.ErrnoError(2);
                                    if (1 == (2097155 & A.flags)) throw new oI.ErrnoError(2);
                                    if (!A.stream_ops.mmap) throw new oI.ErrnoError(43);
                                    return A.stream_ops.mmap(A, I, g, C, Q, B)
                                },
                                msync: function(A, I, g, C, Q) {
                                    return A && A.stream_ops.msync ? A.stream_ops.msync(A, I, g, C, Q) : 0
                                },
                                munmap: function(A) {
                                    return 0
                                },
                                ioctl: function(A, I, g) {
                                    if (!A.stream_ops.ioctl) throw new oI.ErrnoError(59);
                                    return A.stream_ops.ioctl(A, I, g)
                                },
                                readFile: function(A, I) {
                                    if ((I = I || {}).flags = I.flags || "r", I.encoding = I.encoding || "binary", "utf8" !== I.encoding && "binary" !== I.encoding) throw new Error('Invalid encoding type "' + I.encoding + '"');
                                    var g, C = oI.open(A, I.flags),
                                        Q = oI.stat(A).size,
                                        B = new Uint8Array(Q);
                                    return oI.read(C, B, 0, Q, 0), "utf8" === I.encoding ? g = b(B, 0) : "binary" === I.encoding && (g = B), oI.close(C), g
                                },
                                writeFile: function(A, I, g) {
                                    (g = g || {}).flags = g.flags || "w";
                                    var C = oI.open(A, g.flags, g.mode);
                                    if ("string" == typeof I) {
                                        var Q = new Uint8Array(u(I) + 1),
                                            B = X(I, Q, 0, Q.length);
                                        oI.write(C, Q, 0, B, void 0, g.canOwn)
                                    } else {
                                        if (!ArrayBuffer.isView(I)) throw new Error("Unsupported data type");
                                        oI.write(C, I, 0, I.byteLength, void 0, g.canOwn)
                                    }
                                    oI.close(C)
                                },
                                cwd: function() {
                                    return oI.currentPath
                                },
                                chdir: function(A) {
                                    var I = oI.lookupPath(A, {
                                        follow: !0
                                    });
                                    if (null === I.node) throw new oI.ErrnoError(44);
                                    if (!oI.isDir(I.node.mode)) throw new oI.ErrnoError(54);
                                    var g = oI.nodePermissions(I.node, "x");
                                    if (g) throw new oI.ErrnoError(g);
                                    oI.currentPath = I.path
                                },
                                createDefaultDirectories: function() {
                                    oI.mkdir("/tmp"), oI.mkdir("/home"), oI.mkdir("/home/web_user")
                                },
                                createDefaultDevices: function() {
                                    var A;
                                    if (oI.mkdir("/dev"), oI.registerDevice(oI.makedev(1, 3), {
                                            read: function() {
                                                return 0
                                            },
                                            write: function(A, I, g, C, Q) {
                                                return C
                                            }
                                        }), oI.mkdev("/dev/null", oI.makedev(1, 3)), BI.register(oI.makedev(5, 0), BI.default_tty_ops), BI.register(oI.makedev(6, 0), BI.default_tty1_ops), oI.mkdev("/dev/tty", oI.makedev(5, 0)), oI.mkdev("/dev/tty1", oI.makedev(6, 0)), "object" == typeof C && "function" == typeof C.getRandomValues) {
                                        var I = new Uint8Array(1);
                                        A = function() {
                                            return C.getRandomValues(I), I[0]
                                        }
                                    } else if (h) try {
                                        var Q = g(Object(function() {
                                            var A = new Error("Cannot find module 'crypto'");
                                            throw A.code = "MODULE_NOT_FOUND", A
                                        }()));
                                        A = function() {
                                            return Q.randomBytes(1)[0]
                                        }
                                    } catch (A) {}
                                    A || (A = function() {
                                        lA("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")
                                    }), oI.createDevice("/dev", "random", A), oI.createDevice("/dev", "urandom", A), oI.mkdir("/dev/shm"), oI.mkdir("/dev/shm/tmp")
                                },
                                createSpecialDirectories: function() {
                                    oI.mkdir("/proc"), oI.mkdir("/proc/self"), oI.mkdir("/proc/self/fd"), oI.mount({
                                        mount: function() {
                                            var A = oI.createNode("/proc/self", "fd", 16895, 73);
                                            return A.node_ops = {
                                                lookup: function(A, I) {
                                                    var g = +I,
                                                        C = oI.getStream(g);
                                                    if (!C) throw new oI.ErrnoError(8);
                                                    var Q = {
                                                        parent: null,
                                                        mount: {
                                                            mountpoint: "fake"
                                                        },
                                                        node_ops: {
                                                            readlink: function() {
                                                                return C.path
                                                            }
                                                        }
                                                    };
                                                    return Q.parent = Q, Q
                                                }
                                            }, A
                                        }
                                    }, {}, "/proc/self/fd")
                                },
                                createStandardStreams: function() {
                                    k.stdin ? oI.createDevice("/dev", "stdin", k.stdin) : oI.symlink("/dev/tty", "/dev/stdin"), k.stdout ? oI.createDevice("/dev", "stdout", null, k.stdout) : oI.symlink("/dev/tty", "/dev/stdout"), k.stderr ? oI.createDevice("/dev", "stderr", null, k.stderr) : oI.symlink("/dev/tty1", "/dev/stderr");
                                    var A = oI.open("/dev/stdin", "r"),
                                        I = oI.open("/dev/stdout", "w"),
                                        g = oI.open("/dev/stderr", "w");
                                    T(0 === A.fd, "invalid handle for stdin (" + A.fd + ")"), T(1 === I.fd, "invalid handle for stdout (" + I.fd + ")"), T(2 === g.fd, "invalid handle for stderr (" + g.fd + ")")
                                },
                                ensureErrnoError: function() {
                                    oI.ErrnoError || (oI.ErrnoError = function(A, I) {
                                        this.node = I, this.setErrno = function(A) {
                                            for (var I in this.errno = A, DI)
                                                if (DI[I] === A) {
                                                    this.code = I;
                                                    break
                                                }
                                        }, this.setErrno(A), this.message = iI[A], this.stack && (Object.defineProperty(this, "stack", {
                                            value: (new Error).stack,
                                            writable: !0
                                        }), this.stack = zA(this.stack))
                                    }, oI.ErrnoError.prototype = new Error, oI.ErrnoError.prototype.constructor = oI.ErrnoError, [44].forEach((function(A) {
                                        oI.genericErrors[A] = new oI.ErrnoError(A), oI.genericErrors[A].stack = "<generic error, no stack>"
                                    })))
                                },
                                staticInit: function() {
                                    oI.ensureErrnoError(), oI.nameTable = new Array(4096), oI.mount(EI, {}, "/"), oI.createDefaultDirectories(), oI.createDefaultDevices(), oI.createSpecialDirectories(), oI.filesystems = {
                                        MEMFS: EI
                                    }
                                },
                                init: function(A, I, g) {
                                    T(!oI.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"), oI.init.initialized = !0, oI.ensureErrnoError(), k.stdin = A || k.stdin, k.stdout = I || k.stdout, k.stderr = g || k.stderr, oI.createStandardStreams()
                                },
                                quit: function() {
                                    oI.init.initialized = !1;
                                    var A = k._fflush;
                                    A && A(0);
                                    for (var I = 0; I < oI.streams.length; I++) {
                                        var g = oI.streams[I];
                                        g && oI.close(g)
                                    }
                                },
                                getMode: function(A, I) {
                                    var g = 0;
                                    return A && (g |= 365), I && (g |= 146), g
                                },
                                joinPath: function(A, I) {
                                    var g = CI.join.apply(null, A);
                                    return I && "/" == g[0] && (g = g.substr(1)), g
                                },
                                absolutePath: function(A, I) {
                                    return QI.resolve(I, A)
                                },
                                standardizePath: function(A) {
                                    return CI.normalize(A)
                                },
                                findObject: function(A, I) {
                                    var g = oI.analyzePath(A, I);
                                    return g.exists ? g.object : (gI(g.error), null)
                                },
                                analyzePath: function(A, I) {
                                    try {
                                        A = (C = oI.lookupPath(A, {
                                            follow: !I
                                        })).path
                                    } catch (A) {}
                                    var g = {
                                        isRoot: !1,
                                        exists: !1,
                                        error: 0,
                                        name: null,
                                        path: null,
                                        object: null,
                                        parentExists: !1,
                                        parentPath: null,
                                        parentObject: null
                                    };
                                    try {
                                        var C = oI.lookupPath(A, {
                                            parent: !0
                                        });
                                        g.parentExists = !0, g.parentPath = C.path, g.parentObject = C.node, g.name = CI.basename(A), C = oI.lookupPath(A, {
                                            follow: !I
                                        }), g.exists = !0, g.path = C.path, g.object = C.node, g.name = C.node.name, g.isRoot = "/" === C.path
                                    } catch (A) {
                                        g.error = A.errno
                                    }
                                    return g
                                },
                                createFolder: function(A, I, g, C) {
                                    var Q = CI.join2("string" == typeof A ? A : oI.getPath(A), I),
                                        B = oI.getMode(g, C);
                                    return oI.mkdir(Q, B)
                                },
                                createPath: function(A, I, g, C) {
                                    A = "string" == typeof A ? A : oI.getPath(A);
                                    for (var Q = I.split("/").reverse(); Q.length;) {
                                        var B = Q.pop();
                                        if (B) {
                                            var E = CI.join2(A, B);
                                            try {
                                                oI.mkdir(E)
                                            } catch (A) {}
                                            A = E
                                        }
                                    }
                                    return E
                                },
                                createFile: function(A, I, g, C, Q) {
                                    var B = CI.join2("string" == typeof A ? A : oI.getPath(A), I),
                                        E = oI.getMode(C, Q);
                                    return oI.create(B, E)
                                },
                                createDataFile: function(A, I, g, C, Q, B) {
                                    var E = I ? CI.join2("string" == typeof A ? A : oI.getPath(A), I) : A,
                                        i = oI.getMode(C, Q),
                                        D = oI.create(E, i);
                                    if (g) {
                                        if ("string" == typeof g) {
                                            for (var o = new Array(g.length), w = 0, k = g.length; w < k; ++w) o[w] = g.charCodeAt(w);
                                            g = o
                                        }
                                        oI.chmod(D, 146 | i);
                                        var G = oI.open(D, "w");
                                        oI.write(G, g, 0, g.length, 0, B), oI.close(G), oI.chmod(D, i)
                                    }
                                    return D
                                },
                                createDevice: function(A, I, g, C) {
                                    var Q = CI.join2("string" == typeof A ? A : oI.getPath(A), I),
                                        B = oI.getMode(!!g, !!C);
                                    oI.createDevice.major || (oI.createDevice.major = 64);
                                    var E = oI.makedev(oI.createDevice.major++, 0);
                                    return oI.registerDevice(E, {
                                        open: function(A) {
                                            A.seekable = !1
                                        },
                                        close: function(A) {
                                            C && C.buffer && C.buffer.length && C(10)
                                        },
                                        read: function(A, I, C, Q, B) {
                                            for (var E = 0, i = 0; i < Q; i++) {
                                                var D;
                                                try {
                                                    D = g()
                                                } catch (A) {
                                                    throw new oI.ErrnoError(29)
                                                }
                                                if (void 0 === D && 0 === E) throw new oI.ErrnoError(6);
                                                if (null == D) break;
                                                E++, I[C + i] = D
                                            }
                                            return E && (A.node.timestamp = Date.now()), E
                                        },
                                        write: function(A, I, g, Q, B) {
                                            for (var E = 0; E < Q; E++) try {
                                                C(I[g + E])
                                            } catch (A) {
                                                throw new oI.ErrnoError(29)
                                            }
                                            return Q && (A.node.timestamp = Date.now()), E
                                        }
                                    }), oI.mkdev(Q, B, E)
                                },
                                createLink: function(A, I, g, C, Q) {
                                    var B = CI.join2("string" == typeof A ? A : oI.getPath(A), I);
                                    return oI.symlink(g, B)
                                },
                                forceLoadFile: function(A) {
                                    if (A.isDevice || A.isFolder || A.link || A.contents) return !0;
                                    var I = !0;
                                    if ("undefined" != typeof XMLHttpRequest) throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
                                    if (!F) throw new Error("Cannot load without read() or XMLHttpRequest.");
                                    try {
                                        A.contents = OI(F(A.url), !0), A.usedBytes = A.contents.length
                                    } catch (A) {
                                        I = !1
                                    }
                                    return I || gI(29), I
                                },
                                createLazyFile: function(A, I, g, C, Q) {
                                    function B() {
                                        this.lengthKnown = !1, this.chunks = []
                                    }
                                    if (B.prototype.get = function(A) {
                                            if (!(A > this.length - 1 || A < 0)) {
                                                var I = A % this.chunkSize,
                                                    g = A / this.chunkSize | 0;
                                                return this.getter(g)[I]
                                            }
                                        }, B.prototype.setDataGetter = function(A) {
                                            this.getter = A
                                        }, B.prototype.cacheLength = function() {
                                            var A = new XMLHttpRequest;
                                            if (A.open("HEAD", g, !1), A.send(null), !(A.status >= 200 && A.status < 300 || 304 === A.status)) throw new Error("Couldn't load " + g + ". Status: " + A.status);
                                            var I, C = Number(A.getResponseHeader("Content-length")),
                                                Q = (I = A.getResponseHeader("Accept-Ranges")) && "bytes" === I,
                                                B = (I = A.getResponseHeader("Content-Encoding")) && "gzip" === I,
                                                E = 1048576;
                                            Q || (E = C);
                                            var i = this;
                                            i.setDataGetter((function(A) {
                                                var I = A * E,
                                                    Q = (A + 1) * E - 1;
                                                if (Q = Math.min(Q, C - 1), void 0 === i.chunks[A] && (i.chunks[A] = function(A, I) {
                                                        if (A > I) throw new Error("invalid range (" + A + ", " + I + ") or no bytes requested!");
                                                        if (I > C - 1) throw new Error("only " + C + " bytes available! programmer error!");
                                                        var Q = new XMLHttpRequest;
                                                        if (Q.open("GET", g, !1), C !== E && Q.setRequestHeader("Range", "bytes=" + A + "-" + I), "undefined" != typeof Uint8Array && (Q.responseType = "arraybuffer"), Q.overrideMimeType && Q.overrideMimeType("text/plain; charset=x-user-defined"), Q.send(null), !(Q.status >= 200 && Q.status < 300 || 304 === Q.status)) throw new Error("Couldn't load " + g + ". Status: " + Q.status);
                                                        return void 0 !== Q.response ? new Uint8Array(Q.response || []) : OI(Q.responseText || "", !0)
                                                    }(I, Q)), void 0 === i.chunks[A]) throw new Error("doXHR failed!");
                                                return i.chunks[A]
                                            })), !B && C || (E = C = 1, C = this.getter(0).length, E = C, R("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = C, this._chunkSize = E, this.lengthKnown = !0
                                        }, "undefined" != typeof XMLHttpRequest) {
                                        if (!N) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
                                        var E = new B;
                                        Object.defineProperties(E, {
                                            length: {
                                                get: function() {
                                                    return this.lengthKnown || this.cacheLength(), this._length
                                                }
                                            },
                                            chunkSize: {
                                                get: function() {
                                                    return this.lengthKnown || this.cacheLength(), this._chunkSize
                                                }
                                            }
                                        });
                                        var i = {
                                            isDevice: !1,
                                            contents: E
                                        }
                                    } else i = {
                                        isDevice: !1,
                                        url: g
                                    };
                                    var D = oI.createFile(A, I, i, C, Q);
                                    i.contents ? D.contents = i.contents : i.url && (D.contents = null, D.url = i.url), Object.defineProperties(D, {
                                        usedBytes: {
                                            get: function() {
                                                return this.contents.length
                                            }
                                        }
                                    });
                                    var o = {};
                                    return Object.keys(D.stream_ops).forEach((function(A) {
                                        var I = D.stream_ops[A];
                                        o[A] = function() {
                                            if (!oI.forceLoadFile(D)) throw new oI.ErrnoError(29);
                                            return I.apply(null, arguments)
                                        }
                                    })), o.read = function(A, I, g, C, Q) {
                                        if (!oI.forceLoadFile(D)) throw new oI.ErrnoError(29);
                                        var B = A.node.contents;
                                        if (Q >= B.length) return 0;
                                        var E = Math.min(B.length - Q, C);
                                        if (T(E >= 0), B.slice)
                                            for (var i = 0; i < E; i++) I[g + i] = B[Q + i];
                                        else
                                            for (i = 0; i < E; i++) I[g + i] = B.get(Q + i);
                                        return E
                                    }, D.stream_ops = o, D
                                },
                                createPreloadedFile: function(A, I, g, C, Q, B, E, i, D, o) {
                                    Browser.init();
                                    var w = I ? QI.resolve(CI.join2(A, I)) : A,
                                        G = rA("cp " + w);

                                    function J(g) {
                                        function J(g) {
                                            o && o(), i || oI.createDataFile(A, I, g, C, Q, D), B && B(), dA(G)
                                        }
                                        var S = !1;
                                        k.preloadPlugins.forEach((function(A) {
                                            S || A.canHandle(w) && (A.handle(g, w, J, (function() {
                                                E && E(), dA(G)
                                            })), S = !0)
                                        })), S || J(g)
                                    }
                                    LA(G), "string" == typeof g ? Browser.asyncLoad(g, (function(A) {
                                        J(A)
                                    }), E) : J(g)
                                },
                                indexedDB: function() {
                                    return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB
                                },
                                DB_NAME: function() {
                                    return "EM_FS_" + window.location.pathname
                                },
                                DB_VERSION: 20,
                                DB_STORE_NAME: "FILE_DATA",
                                saveFilesToDB: function(A, I, g) {
                                    I = I || function() {}, g = g || function() {};
                                    var C = oI.indexedDB();
                                    try {
                                        var Q = C.open(oI.DB_NAME(), oI.DB_VERSION)
                                    } catch (A) {
                                        return g(A)
                                    }
                                    Q.onupgradeneeded = function() {
                                        R("creating db"), Q.result.createObjectStore(oI.DB_STORE_NAME)
                                    }, Q.onsuccess = function() {
                                        var C = Q.result.transaction([oI.DB_STORE_NAME], "readwrite"),
                                            B = C.objectStore(oI.DB_STORE_NAME),
                                            E = 0,
                                            i = 0,
                                            D = A.length;

                                        function o() {
                                            0 == i ? I() : g()
                                        }
                                        A.forEach((function(A) {
                                            var I = B.put(oI.analyzePath(A).object.contents, A);
                                            I.onsuccess = function() {
                                                ++E + i == D && o()
                                            }, I.onerror = function() {
                                                i++, E + i == D && o()
                                            }
                                        })), C.onerror = g
                                    }, Q.onerror = g
                                },
                                loadFilesFromDB: function(A, I, g) {
                                    I = I || function() {}, g = g || function() {};
                                    var C = oI.indexedDB();
                                    try {
                                        var Q = C.open(oI.DB_NAME(), oI.DB_VERSION)
                                    } catch (A) {
                                        return g(A)
                                    }
                                    Q.onupgradeneeded = g, Q.onsuccess = function() {
                                        var C = Q.result;
                                        try {
                                            var B = C.transaction([oI.DB_STORE_NAME], "readonly")
                                        } catch (A) {
                                            return void g(A)
                                        }
                                        var E = B.objectStore(oI.DB_STORE_NAME),
                                            i = 0,
                                            D = 0,
                                            o = A.length;

                                        function w() {
                                            0 == D ? I() : g()
                                        }
                                        A.forEach((function(A) {
                                            var I = E.get(A);
                                            I.onsuccess = function() {
                                                oI.analyzePath(A).exists && oI.unlink(A), oI.createDataFile(CI.dirname(A), CI.basename(A), I.result, !0, !0, !0), ++i + D == o && w()
                                            }, I.onerror = function() {
                                                D++, i + D == o && w()
                                            }
                                        })), B.onerror = g
                                    }, Q.onerror = g
                                },
                                mmapAlloc: function(A) {
                                    for (var I = Y(A, 16384), g = xI(I); A < I;) V[g + A++] = 0;
                                    return g
                                }
                            },
                            wI = {
                                mappings: {},
                                DEFAULT_POLLMASK: 5,
                                umask: 511,
                                calculateAt: function(A, I) {
                                    if ("/" !== I[0]) {
                                        var g;
                                        if (-100 === A) g = oI.cwd();
                                        else {
                                            var C = oI.getStream(A);
                                            if (!C) throw new oI.ErrnoError(8);
                                            g = C.path
                                        }
                                        I = CI.join2(g, I)
                                    }
                                    return I
                                },
                                doStat: function(A, I, g) {
                                    try {
                                        var C = A(I)
                                    } catch (A) {
                                        if (A && A.node && CI.normalize(I) !== CI.normalize(oI.getPath(A.node))) return -54;
                                        throw A
                                    }
                                    return z[g >> 2] = C.dev, z[g + 4 >> 2] = 0, z[g + 8 >> 2] = C.ino, z[g + 12 >> 2] = C.mode, z[g + 16 >> 2] = C.nlink, z[g + 20 >> 2] = C.uid, z[g + 24 >> 2] = C.gid, z[g + 28 >> 2] = C.rdev, z[g + 32 >> 2] = 0, XA = [C.size >>> 0, (mA = C.size, +eA(mA) >= 1 ? mA > 0 ? (0 | KA(+RA(mA / 4294967296), 4294967295)) >>> 0 : ~~+cA((mA - +(~~mA >>> 0)) / 4294967296) >>> 0 : 0)], z[g + 40 >> 2] = XA[0], z[g + 44 >> 2] = XA[1], z[g + 48 >> 2] = 4096, z[g + 52 >> 2] = C.blocks, z[g + 56 >> 2] = C.atime.getTime() / 1e3 | 0, z[g + 60 >> 2] = 0, z[g + 64 >> 2] = C.mtime.getTime() / 1e3 | 0, z[g + 68 >> 2] = 0, z[g + 72 >> 2] = C.ctime.getTime() / 1e3 | 0, z[g + 76 >> 2] = 0, XA = [C.ino >>> 0, (mA = C.ino, +eA(mA) >= 1 ? mA > 0 ? (0 | KA(+RA(mA / 4294967296), 4294967295)) >>> 0 : ~~+cA((mA - +(~~mA >>> 0)) / 4294967296) >>> 0 : 0)], z[g + 80 >> 2] = XA[0], z[g + 84 >> 2] = XA[1], 0
                                },
                                doMsync: function(A, I, g, C, Q) {
                                    var B = j.slice(A, A + g);
                                    oI.msync(I, B, Q, g, C)
                                },
                                doMkdir: function(A, I) {
                                    return "/" === (A = CI.normalize(A))[A.length - 1] && (A = A.substr(0, A.length - 1)), oI.mkdir(A, I, 0), 0
                                },
                                doMknod: function(A, I, g) {
                                    switch (61440 & I) {
                                        case 32768:
                                        case 8192:
                                        case 24576:
                                        case 4096:
                                        case 49152:
                                            break;
                                        default:
                                            return -28
                                    }
                                    return oI.mknod(A, I, g), 0
                                },
                                doReadlink: function(A, I, g) {
                                    if (g <= 0) return -28;
                                    var C = oI.readlink(A),
                                        Q = Math.min(g, u(C)),
                                        B = V[I + Q];
                                    return P(C, I, g + 1), V[I + Q] = B, Q
                                },
                                doAccess: function(A, I) {
                                    if (-8 & I) return -28;
                                    var g;
                                    if (!(g = oI.lookupPath(A, {
                                            follow: !0
                                        }).node)) return -44;
                                    var C = "";
                                    return 4 & I && (C += "r"), 2 & I && (C += "w"), 1 & I && (C += "x"), C && oI.nodePermissions(g, C) ? -2 : 0
                                },
                                doDup: function(A, I, g) {
                                    var C = oI.getStream(g);
                                    return C && oI.close(C), oI.open(A, I, 0, g, g).fd
                                },
                                doReadv: function(A, I, g, C) {
                                    for (var Q = 0, B = 0; B < g; B++) {
                                        var E = z[I + 8 * B >> 2],
                                            i = z[I + (8 * B + 4) >> 2],
                                            D = oI.read(A, V, E, i, C);
                                        if (D < 0) return -1;
                                        if (Q += D, D < i) break
                                    }
                                    return Q
                                },
                                doWritev: function(A, I, g, C) {
                                    for (var Q = 0, B = 0; B < g; B++) {
                                        var E = z[I + 8 * B >> 2],
                                            i = z[I + (8 * B + 4) >> 2],
                                            D = oI.write(A, V, E, i, C);
                                        if (D < 0) return -1;
                                        Q += D
                                    }
                                    return Q
                                },
                                varargs: void 0,
                                get: function() {
                                    return T(null != wI.varargs), wI.varargs += 4, z[wI.varargs - 4 >> 2]
                                },
                                getStr: function(A) {
                                    return m(A)
                                },
                                getStreamFromFD: function(A) {
                                    var I = oI.getStream(A);
                                    if (!I) throw new oI.ErrnoError(8);
                                    return I
                                },
                                get64: function(A, I) {
                                    return T(A >= 0 ? 0 === I : -1 === I), A
                                }
                            };

                        function kI(A, I, g) {
                            wI.varargs = g;
                            try {
                                var C = wI.getStreamFromFD(A);
                                switch (I) {
                                    case 0:
                                        return (Q = wI.get()) < 0 ? -28 : oI.open(C.path, C.flags, 0, Q).fd;
                                    case 1:
                                    case 2:
                                        return 0;
                                    case 3:
                                        return C.flags;
                                    case 4:
                                        var Q = wI.get();
                                        return C.flags |= Q, 0;
                                    case 12:
                                        return Q = wI.get(), v[Q + 0 >> 1] = 2, 0;
                                    case 13:
                                    case 14:
                                        return 0;
                                    case 16:
                                    case 8:
                                        return -28;
                                    case 9:
                                        return gI(28), -1;
                                    default:
                                        return -28
                                }
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), -A.errno
                            }
                        }

                        function GI(A, I, g) {
                            wI.varargs = g;
                            try {
                                var C = wI.getStreamFromFD(A);
                                switch (I) {
                                    case 21509:
                                    case 21505:
                                        return C.tty ? 0 : -59;
                                    case 21510:
                                    case 21511:
                                    case 21512:
                                    case 21506:
                                    case 21507:
                                    case 21508:
                                        return C.tty ? 0 : -59;
                                    case 21519:
                                        if (!C.tty) return -59;
                                        var Q = wI.get();
                                        return z[Q >> 2] = 0, 0;
                                    case 21520:
                                        return C.tty ? -28 : -59;
                                    case 21531:
                                        return Q = wI.get(), oI.ioctl(C, I, Q);
                                    case 21523:
                                    case 21524:
                                        return C.tty ? 0 : -59;
                                    default:
                                        lA("bad ioctl syscall " + I)
                                }
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), -A.errno
                            }
                        }

                        function JI(A, I, g) {
                            wI.varargs = g;
                            try {
                                var C = wI.getStr(A),
                                    Q = wI.get();
                                return oI.open(C, I, Q).fd
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), -A.errno
                            }
                        }

                        function SI() {
                            lA()
                        }

                        function aI(A, I, g) {
                            var C = LI(I, g);
                            return VA[A].apply(null, C)
                        }

                        function UI() {
                            return 48256
                        }

                        function NI(A, I) {
                            throw VI(A, I || 1), "longjmp"
                        }

                        function hI(A, I) {
                            NI(A, I)
                        }

                        function sI(A, I, g) {
                            j.copyWithin(A, I, I + g)
                        }

                        function FI() {
                            return j.length
                        }

                        function MI(A) {
                            try {
                                return L.grow(A - W.byteLength + 65535 >>> 16), gA(L.buffer), 1
                            } catch (I) {
                                console.error("emscripten_realloc_buffer: Attempted to grow heap from " + W.byteLength + " bytes to " + A + " bytes, but got error: " + I)
                            }
                        }

                        function tI(A) {
                            A >>>= 0;
                            var I = FI();
                            T(A > I);
                            var g = 2147483648;
                            if (A > g) return K("Cannot enlarge memory, asked to go up to " + A + " bytes, but the limit is 2147483648 bytes!"), !1;
                            for (var C = 1; C <= 4; C *= 2) {
                                var Q = I * (1 + .2 / C);
                                Q = Math.min(Q, A + 100663296);
                                var B = Math.min(g, IA(Math.max(16777216, A, Q), 65536));
                                if (MI(B)) return !0
                            }
                            return K("Failed to grow the heap from " + I + " bytes to " + B + " bytes, not enough memory!"), !1
                        }

                        function yI(A) {
                            Dg(A)
                        }

                        function eI(A) {
                            try {
                                var I = wI.getStreamFromFD(A);
                                return oI.close(I), 0
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), A.errno
                            }
                        }

                        function cI(A, I, g, C) {
                            try {
                                var Q = wI.getStreamFromFD(A),
                                    B = wI.doReadv(Q, I, g);
                                return z[C >> 2] = B, 0
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), A.errno
                            }
                        }

                        function RI(A, I, g, C, Q) {
                            try {
                                var B = wI.getStreamFromFD(A),
                                    E = 4294967296 * g + (I >>> 0),
                                    i = 9007199254740992;
                                return E <= -i || E >= i ? -61 : (oI.llseek(B, E, C), XA = [B.position >>> 0, (mA = B.position, +eA(mA) >= 1 ? mA > 0 ? (0 | KA(+RA(mA / 4294967296), 4294967295)) >>> 0 : ~~+cA((mA - +(~~mA >>> 0)) / 4294967296) >>> 0 : 0)], z[Q >> 2] = XA[0], z[Q + 4 >> 2] = XA[1], B.getdents && 0 === E && 0 === C && (B.getdents = null), 0)
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), A.errno
                            }
                        }

                        function KI(A, I, g, C) {
                            try {
                                var Q = wI.getStreamFromFD(A),
                                    B = wI.doWritev(Q, I, g);
                                return z[C >> 2] = B, 0
                            } catch (A) {
                                return void 0 !== oI && A instanceof oI.ErrnoError || lA(A), A.errno
                            }
                        }

                        function HI() {
                            return 0 | p()
                        }

                        function YI(A) {
                            var I = Date.now();
                            return z[A >> 2] = I / 1e3 | 0, z[A + 4 >> 2] = I % 1e3 * 1e3 | 0, 0
                        }

                        function nI(A) {
                            l(0 | A)
                        }

                        function qI(A) {
                            switch (A) {
                                case 30:
                                    return 16384;
                                case 85:
                                    return 131072;
                                case 132:
                                case 133:
                                case 12:
                                case 137:
                                case 138:
                                case 15:
                                case 235:
                                case 16:
                                case 17:
                                case 18:
                                case 19:
                                case 20:
                                case 149:
                                case 13:
                                case 10:
                                case 236:
                                case 153:
                                case 9:
                                case 21:
                                case 22:
                                case 159:
                                case 154:
                                case 14:
                                case 77:
                                case 78:
                                case 139:
                                case 80:
                                case 81:
                                case 82:
                                case 68:
                                case 67:
                                case 164:
                                case 11:
                                case 29:
                                case 47:
                                case 48:
                                case 95:
                                case 52:
                                case 51:
                                case 46:
                                case 79:
                                    return 200809;
                                case 27:
                                case 246:
                                case 127:
                                case 128:
                                case 23:
                                case 24:
                                case 160:
                                case 161:
                                case 181:
                                case 182:
                                case 242:
                                case 183:
                                case 184:
                                case 243:
                                case 244:
                                case 245:
                                case 165:
                                case 178:
                                case 179:
                                case 49:
                                case 50:
                                case 168:
                                case 169:
                                case 175:
                                case 170:
                                case 171:
                                case 172:
                                case 97:
                                case 76:
                                case 32:
                                case 173:
                                case 35:
                                    return -1;
                                case 176:
                                case 177:
                                case 7:
                                case 155:
                                case 8:
                                case 157:
                                case 125:
                                case 126:
                                case 92:
                                case 93:
                                case 129:
                                case 130:
                                case 131:
                                case 94:
                                case 91:
                                    return 1;
                                case 74:
                                case 60:
                                case 69:
                                case 70:
                                case 4:
                                    return 1024;
                                case 31:
                                case 42:
                                case 72:
                                    return 32;
                                case 87:
                                case 26:
                                case 33:
                                    return 2147483647;
                                case 34:
                                case 1:
                                    return 47839;
                                case 38:
                                case 36:
                                    return 99;
                                case 43:
                                case 37:
                                    return 2048;
                                case 0:
                                    return 2097152;
                                case 3:
                                    return 65536;
                                case 28:
                                    return 32768;
                                case 44:
                                    return 32767;
                                case 75:
                                    return 16384;
                                case 39:
                                    return 1e3;
                                case 89:
                                    return 700;
                                case 71:
                                    return 256;
                                case 40:
                                    return 255;
                                case 2:
                                    return 100;
                                case 180:
                                    return 64;
                                case 25:
                                    return 20;
                                case 5:
                                    return 16;
                                case 6:
                                    return 6;
                                case 73:
                                    return 4;
                                case 84:
                                    return "object" == typeof navigator && navigator.hardwareConcurrency || 1
                            }
                            return gI(28), -1
                        }
                        var rI = [];

                        function LI(A, I) {
                            var g;
                            for (T(Array.isArray(rI)), T(I % 16 == 0), rI.length = 0, I >>= 2; g = j[A++];) {
                                T(100 === g || 102 === g || 105 === g);
                                var C = g < 105;
                                C && 1 & I && I++, rI.push(C ? $[I++ >> 1] : z[I]), ++I
                            }
                            return rI
                        }
                        var dI = function(A, I, g, C) {
                                A || (A = this), this.parent = A, this.mount = A.mount, this.mounted = null, this.id = oI.nextInode++, this.name = I, this.mode = g, this.node_ops = {}, this.stream_ops = {}, this.rdev = C
                            },
                            lI = 365,
                            pI = 146;
                        Object.defineProperties(dI.prototype, {
                            read: {
                                get: function() {
                                    return (this.mode & lI) === lI
                                },
                                set: function(A) {
                                    A ? this.mode |= lI : this.mode &= ~lI
                                }
                            },
                            write: {
                                get: function() {
                                    return (this.mode & pI) === pI
                                },
                                set: function(A) {
                                    A ? this.mode |= pI : this.mode &= ~pI
                                }
                            },
                            isFolder: {
                                get: function() {
                                    return oI.isDir(this.mode)
                                }
                            },
                            isDevice: {
                                get: function() {
                                    return oI.isChrdev(this.mode)
                                }
                            }
                        }), oI.FSNode = dI, oI.staticInit();
                        var fI = !0;

                        function OI(A, I, g) {
                            var C = g > 0 ? g : u(A) + 1,
                                Q = new Array(C),
                                B = X(A, Q, 0, Q.length);
                            return I && (Q.length = B), Q
                        }

                        function TI(A) {
                            for (var I = [], g = 0; g < A.length; g++) {
                                var C = A[g];
                                C > 255 && (fI && T(!1, "Character code " + C + " (" + String.fromCharCode(C) + ")  at offset " + g + " not in 0x00-0xFF."), C &= 255), I.push(String.fromCharCode(C))
                            }
                            return I.join("")
                        }
                        var ZI = "function" == typeof atob ? atob : function(A) {
                            var I, g, C, Q, B, E, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                                D = "",
                                o = 0;
                            A = A.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                            do {
                                I = i.indexOf(A.charAt(o++)) << 2 | (Q = i.indexOf(A.charAt(o++))) >> 4, g = (15 & Q) << 4 | (B = i.indexOf(A.charAt(o++))) >> 2, C = (3 & B) << 6 | (E = i.indexOf(A.charAt(o++))), D += String.fromCharCode(I), 64 !== B && (D += String.fromCharCode(g)), 64 !== E && (D += String.fromCharCode(C))
                            } while (o < A.length);
                            return D
                        };

                        function bI(A) {
                            if ("boolean" == typeof h && h) {
                                var I;
                                try {
                                    I = Buffer.from(A, "base64")
                                } catch (g) {
                                    I = new Buffer(A, "base64")
                                }
                                return new Uint8Array(I.buffer, I.byteOffset, I.byteLength)
                            }
                            try {
                                for (var g = ZI(A), C = new Uint8Array(g.length), Q = 0; Q < g.length; ++Q) C[Q] = g.charCodeAt(Q);
                                return C
                            } catch (A) {
                                throw new Error("Converting base64 string to bytes failed.")
                            }
                        }

                        function mI(A) {
                            if (OA(A)) return bI(A.slice(fA.length))
                        }
                        var XI, PI = {
                                __assert_fail: AI,
                                __cxa_atexit: II,
                                __sys_fcntl64: kI,
                                __sys_ioctl: GI,
                                __sys_open: JI,
                                abort: SI,
                                emscripten_asm_const_int: aI,
                                emscripten_get_sbrk_ptr: UI,
                                emscripten_longjmp: hI,
                                emscripten_memcpy_big: sI,
                                emscripten_resize_heap: tI,
                                exit: yI,
                                fd_close: eI,
                                fd_read: cI,
                                fd_seek: RI,
                                fd_write: KI,
                                getTempRet0: HI,
                                gettimeofday: YI,
                                invoke_ii: Ag,
                                invoke_iii: Cg,
                                invoke_iiii: _I,
                                invoke_iiiii: Ig,
                                invoke_vii: $I,
                                invoke_viiii: gg,
                                memory: L,
                                setTempRet0: nI,
                                sysconf: qI,
                                table: f
                            },
                            uI = (WA(), k.___wasm_call_ctors = bA("__wasm_call_ctors")),
                            xI = (k._main = bA("main"), k._malloc = bA("malloc")),
                            WI = (k._saveSetjmp = bA("saveSetjmp"), k._testSetjmp = bA("testSetjmp"), k._free = bA("free"), k.___errno_location = bA("__errno_location")),
                            VI = (k._fflush = bA("fflush"), k._setThrew = bA("setThrew")),
                            jI = k.stackSave = bA("stackSave"),
                            vI = k.stackRestore = bA("stackRestore"),
                            zI = k.stackAlloc = bA("stackAlloc");

                        function _I(A, I, g, C) {
                            var Q = jI();
                            try {
                                return f.get(A)(I, g, C)
                            } catch (A) {
                                if (vI(Q), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function $I(A, I, g) {
                            var C = jI();
                            try {
                                f.get(A)(I, g)
                            } catch (A) {
                                if (vI(C), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function Ag(A, I) {
                            var g = jI();
                            try {
                                return f.get(A)(I)
                            } catch (A) {
                                if (vI(g), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function Ig(A, I, g, C, Q) {
                            var B = jI();
                            try {
                                return f.get(A)(I, g, C, Q)
                            } catch (A) {
                                if (vI(B), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function gg(A, I, g, C, Q) {
                            var B = jI();
                            try {
                                f.get(A)(I, g, C, Q)
                            } catch (A) {
                                if (vI(B), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function Cg(A, I, g) {
                            var C = jI();
                            try {
                                return f.get(A)(I, g)
                            } catch (A) {
                                if (vI(C), A !== A + 0 && "longjmp" !== A) throw A;
                                VI(1, 0)
                            }
                        }

                        function Qg(A) {
                            this.name = "ExitStatus", this.message = "Program terminated with exit(" + A + ")", this.status = A
                        }

                        function Bg(A) {
                            T(0 == HA, 'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])'), T(0 == kA.length, "cannot call main when preRun functions remain to be called");
                            var I = k._main,
                                g = (A = A || []).length + 1,
                                C = zI(4 * (g + 1));
                            z[C >> 2] = x(S);
                            for (var Q = 1; Q < g; Q++) z[(C >> 2) + Q] = x(A[Q - 1]);
                            z[(C >> 2) + g] = 0;
                            try {
                                Dg(I(g, C), !0)
                            } catch (A) {
                                if (A instanceof Qg) return;
                                if ("unwind" == A) return void(r = !0);
                                var B = A;
                                A && "object" == typeof A && A.stack && (B = [A, A.stack]), K("exception thrown: " + B), a(1, A)
                            }
                        }

                        function Eg(A) {
                            function I() {
                                XI || (XI = !0, k.calledRun = !0, O || (hA(), sA(), k.onRuntimeInitialized && k.onRuntimeInitialized(), og && Bg(A), MA()))
                            }
                            A = A || J, HA > 0 || (oA(), NA(), HA > 0 || (k.setStatus ? (k.setStatus("Running..."), setTimeout((function() {
                                setTimeout((function() {
                                    k.setStatus("")
                                }), 1), I()
                            }), 1)) : I(), wA()))
                        }

                        function ig() {
                            var A = R,
                                I = K,
                                g = !1;
                            R = K = function(A) {
                                g = !0
                            };
                            try {
                                var C = k._fflush;
                                C && C(0), ["stdout", "stderr"].forEach((function(A) {
                                    var I = oI.analyzePath("/dev/" + A);
                                    if (I) {
                                        var C = I.object.rdev,
                                            Q = BI.ttys[C];
                                        Q && Q.output && Q.output.length && (g = !0)
                                    }
                                }))
                            } catch (A) {}
                            R = A, K = I, g && n("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.")
                        }

                        function Dg(A, I) {
                            ig(), I && r && 0 === A || (r ? I || K("program exited (with status: " + A + "), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)") : (O = !0, FA(), k.onExit && k.onExit(A)), a(A, new Qg(A)))
                        }
                        if (k._realloc = bA("realloc"), k.dynCall_jiji = bA("dynCall_jiji"), k.__growWasmMemory = bA("__growWasmMemory"), Object.getOwnPropertyDescriptor(k, "intArrayFromString") || (k.intArrayFromString = function() {
                                lA("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "intArrayToString") || (k.intArrayToString = function() {
                                lA("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ccall") || (k.ccall = function() {
                                lA("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "cwrap") || (k.cwrap = function() {
                                lA("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "setValue") || (k.setValue = function() {
                                lA("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getValue") || (k.getValue = function() {
                                lA("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "allocate") || (k.allocate = function() {
                                lA("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getMemory") || (k.getMemory = function() {
                                lA("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "UTF8ArrayToString") || (k.UTF8ArrayToString = function() {
                                lA("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "UTF8ToString") || (k.UTF8ToString = function() {
                                lA("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToUTF8Array") || (k.stringToUTF8Array = function() {
                                lA("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToUTF8") || (k.stringToUTF8 = function() {
                                lA("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "lengthBytesUTF8") || (k.lengthBytesUTF8 = function() {
                                lA("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stackTrace") || (k.stackTrace = function() {
                                lA("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addOnPreRun") || (k.addOnPreRun = function() {
                                lA("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addOnInit") || (k.addOnInit = function() {
                                lA("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addOnPreMain") || (k.addOnPreMain = function() {
                                lA("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addOnExit") || (k.addOnExit = function() {
                                lA("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addOnPostRun") || (k.addOnPostRun = function() {
                                lA("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeStringToMemory") || (k.writeStringToMemory = function() {
                                lA("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeArrayToMemory") || (k.writeArrayToMemory = function() {
                                lA("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeAsciiToMemory") || (k.writeAsciiToMemory = function() {
                                lA("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addRunDependency") || (k.addRunDependency = function() {
                                lA("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "removeRunDependency") || (k.removeRunDependency = function() {
                                lA("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createFolder") || (k.FS_createFolder = function() {
                                lA("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createPath") || (k.FS_createPath = function() {
                                lA("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createDataFile") || (k.FS_createDataFile = function() {
                                lA("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createPreloadedFile") || (k.FS_createPreloadedFile = function() {
                                lA("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createLazyFile") || (k.FS_createLazyFile = function() {
                                lA("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createLink") || (k.FS_createLink = function() {
                                lA("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_createDevice") || (k.FS_createDevice = function() {
                                lA("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "FS_unlink") || (k.FS_unlink = function() {
                                lA("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
                            }), Object.getOwnPropertyDescriptor(k, "dynamicAlloc") || (k.dynamicAlloc = function() {
                                lA("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "loadDynamicLibrary") || (k.loadDynamicLibrary = function() {
                                lA("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "loadWebAssemblyModule") || (k.loadWebAssemblyModule = function() {
                                lA("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getLEB") || (k.getLEB = function() {
                                lA("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getFunctionTables") || (k.getFunctionTables = function() {
                                lA("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "alignFunctionTables") || (k.alignFunctionTables = function() {
                                lA("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "registerFunctions") || (k.registerFunctions = function() {
                                lA("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "addFunction") || (k.addFunction = function() {
                                lA("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "removeFunction") || (k.removeFunction = function() {
                                lA("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getFuncWrapper") || (k.getFuncWrapper = function() {
                                lA("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "prettyPrint") || (k.prettyPrint = function() {
                                lA("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "makeBigInt") || (k.makeBigInt = function() {
                                lA("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "dynCall") || (k.dynCall = function() {
                                lA("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getCompilerSetting") || (k.getCompilerSetting = function() {
                                lA("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "print") || (k.print = function() {
                                lA("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "printErr") || (k.printErr = function() {
                                lA("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getTempRet0") || (k.getTempRet0 = function() {
                                lA("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "setTempRet0") || (k.setTempRet0 = function() {
                                lA("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "callMain") || (k.callMain = function() {
                                lA("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "abort") || (k.abort = function() {
                                lA("'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToNewUTF8") || (k.stringToNewUTF8 = function() {
                                lA("'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "emscripten_realloc_buffer") || (k.emscripten_realloc_buffer = function() {
                                lA("'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ENV") || (k.ENV = function() {
                                lA("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ERRNO_CODES") || (k.ERRNO_CODES = function() {
                                lA("'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ERRNO_MESSAGES") || (k.ERRNO_MESSAGES = function() {
                                lA("'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "setErrNo") || (k.setErrNo = function() {
                                lA("'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "DNS") || (k.DNS = function() {
                                lA("'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GAI_ERRNO_MESSAGES") || (k.GAI_ERRNO_MESSAGES = function() {
                                lA("'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "Protocols") || (k.Protocols = function() {
                                lA("'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "Sockets") || (k.Sockets = function() {
                                lA("'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "traverseStack") || (k.traverseStack = function() {
                                lA("'traverseStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "UNWIND_CACHE") || (k.UNWIND_CACHE = function() {
                                lA("'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "withBuiltinMalloc") || (k.withBuiltinMalloc = function() {
                                lA("'withBuiltinMalloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "readAsmConstArgsArray") || (k.readAsmConstArgsArray = function() {
                                lA("'readAsmConstArgsArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "readAsmConstArgs") || (k.readAsmConstArgs = function() {
                                lA("'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "mainThreadEM_ASM") || (k.mainThreadEM_ASM = function() {
                                lA("'mainThreadEM_ASM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "jstoi_q") || (k.jstoi_q = function() {
                                lA("'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "jstoi_s") || (k.jstoi_s = function() {
                                lA("'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getExecutableName") || (k.getExecutableName = function() {
                                lA("'getExecutableName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "listenOnce") || (k.listenOnce = function() {
                                lA("'listenOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "autoResumeAudioContext") || (k.autoResumeAudioContext = function() {
                                lA("'autoResumeAudioContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "dynCallLegacy") || (k.dynCallLegacy = function() {
                                lA("'dynCallLegacy' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getDynCaller") || (k.getDynCaller = function() {
                                lA("'getDynCaller' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "dynCall") || (k.dynCall = function() {
                                lA("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "callRuntimeCallbacks") || (k.callRuntimeCallbacks = function() {
                                lA("'callRuntimeCallbacks' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "abortStackOverflow") || (k.abortStackOverflow = function() {
                                lA("'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "reallyNegative") || (k.reallyNegative = function() {
                                lA("'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "unSign") || (k.unSign = function() {
                                lA("'unSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "reSign") || (k.reSign = function() {
                                lA("'reSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "formatString") || (k.formatString = function() {
                                lA("'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "PATH") || (k.PATH = function() {
                                lA("'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "PATH_FS") || (k.PATH_FS = function() {
                                lA("'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SYSCALLS") || (k.SYSCALLS = function() {
                                lA("'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "syscallMmap2") || (k.syscallMmap2 = function() {
                                lA("'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "syscallMunmap") || (k.syscallMunmap = function() {
                                lA("'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "JSEvents") || (k.JSEvents = function() {
                                lA("'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "specialHTMLTargets") || (k.specialHTMLTargets = function() {
                                lA("'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "maybeCStringToJsString") || (k.maybeCStringToJsString = function() {
                                lA("'maybeCStringToJsString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "findEventTarget") || (k.findEventTarget = function() {
                                lA("'findEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "findCanvasEventTarget") || (k.findCanvasEventTarget = function() {
                                lA("'findCanvasEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "polyfillSetImmediate") || (k.polyfillSetImmediate = function() {
                                lA("'polyfillSetImmediate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "demangle") || (k.demangle = function() {
                                lA("'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "demangleAll") || (k.demangleAll = function() {
                                lA("'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "jsStackTrace") || (k.jsStackTrace = function() {
                                lA("'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stackTrace") || (k.stackTrace = function() {
                                lA("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getEnvStrings") || (k.getEnvStrings = function() {
                                lA("'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "checkWasiClock") || (k.checkWasiClock = function() {
                                lA("'checkWasiClock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeI53ToI64") || (k.writeI53ToI64 = function() {
                                lA("'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeI53ToI64Clamped") || (k.writeI53ToI64Clamped = function() {
                                lA("'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeI53ToI64Signaling") || (k.writeI53ToI64Signaling = function() {
                                lA("'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeI53ToU64Clamped") || (k.writeI53ToU64Clamped = function() {
                                lA("'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeI53ToU64Signaling") || (k.writeI53ToU64Signaling = function() {
                                lA("'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "readI53FromI64") || (k.readI53FromI64 = function() {
                                lA("'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "readI53FromU64") || (k.readI53FromU64 = function() {
                                lA("'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "convertI32PairToI53") || (k.convertI32PairToI53 = function() {
                                lA("'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "convertU32PairToI53") || (k.convertU32PairToI53 = function() {
                                lA("'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "exceptionLast") || (k.exceptionLast = function() {
                                lA("'exceptionLast' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "exceptionCaught") || (k.exceptionCaught = function() {
                                lA("'exceptionCaught' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "exceptionThrowBuf") || (k.exceptionThrowBuf = function() {
                                lA("'exceptionThrowBuf' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ExceptionInfoAttrs") || (k.ExceptionInfoAttrs = function() {
                                lA("'ExceptionInfoAttrs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ExceptionInfo") || (k.ExceptionInfo = function() {
                                lA("'ExceptionInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "CatchInfo") || (k.CatchInfo = function() {
                                lA("'CatchInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "exception_addRef") || (k.exception_addRef = function() {
                                lA("'exception_addRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "exception_decRef") || (k.exception_decRef = function() {
                                lA("'exception_decRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "Browser") || (k.Browser = function() {
                                lA("'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "funcWrappers") || (k.funcWrappers = function() {
                                lA("'funcWrappers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "getFuncWrapper") || (k.getFuncWrapper = function() {
                                lA("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "setMainLoop") || (k.setMainLoop = function() {
                                lA("'setMainLoop' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "FS") || (k.FS = function() {
                                lA("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "MEMFS") || (k.MEMFS = function() {
                                lA("'MEMFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "TTY") || (k.TTY = function() {
                                lA("'TTY' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "PIPEFS") || (k.PIPEFS = function() {
                                lA("'PIPEFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SOCKFS") || (k.SOCKFS = function() {
                                lA("'SOCKFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "tempFixedLengthArray") || (k.tempFixedLengthArray = function() {
                                lA("'tempFixedLengthArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "miniTempWebGLFloatBuffers") || (k.miniTempWebGLFloatBuffers = function() {
                                lA("'miniTempWebGLFloatBuffers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "heapObjectForWebGLType") || (k.heapObjectForWebGLType = function() {
                                lA("'heapObjectForWebGLType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "heapAccessShiftForWebGLHeap") || (k.heapAccessShiftForWebGLHeap = function() {
                                lA("'heapAccessShiftForWebGLHeap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GL") || (k.GL = function() {
                                lA("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "emscriptenWebGLGet") || (k.emscriptenWebGLGet = function() {
                                lA("'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "computeUnpackAlignedImageSize") || (k.computeUnpackAlignedImageSize = function() {
                                lA("'computeUnpackAlignedImageSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "emscriptenWebGLGetTexPixelData") || (k.emscriptenWebGLGetTexPixelData = function() {
                                lA("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "emscriptenWebGLGetUniform") || (k.emscriptenWebGLGetUniform = function() {
                                lA("'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "emscriptenWebGLGetVertexAttrib") || (k.emscriptenWebGLGetVertexAttrib = function() {
                                lA("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "writeGLArray") || (k.writeGLArray = function() {
                                lA("'writeGLArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "AL") || (k.AL = function() {
                                lA("'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SDL_unicode") || (k.SDL_unicode = function() {
                                lA("'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SDL_ttfContext") || (k.SDL_ttfContext = function() {
                                lA("'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SDL_audio") || (k.SDL_audio = function() {
                                lA("'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SDL") || (k.SDL = function() {
                                lA("'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "SDL_gfx") || (k.SDL_gfx = function() {
                                lA("'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GLUT") || (k.GLUT = function() {
                                lA("'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "EGL") || (k.EGL = function() {
                                lA("'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GLFW_Window") || (k.GLFW_Window = function() {
                                lA("'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GLFW") || (k.GLFW = function() {
                                lA("'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "GLEW") || (k.GLEW = function() {
                                lA("'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "IDBStore") || (k.IDBStore = function() {
                                lA("'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "runAndAbortIfError") || (k.runAndAbortIfError = function() {
                                lA("'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "warnOnce") || (k.warnOnce = function() {
                                lA("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stackSave") || (k.stackSave = function() {
                                lA("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stackRestore") || (k.stackRestore = function() {
                                lA("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stackAlloc") || (k.stackAlloc = function() {
                                lA("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "AsciiToString") || (k.AsciiToString = function() {
                                lA("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToAscii") || (k.stringToAscii = function() {
                                lA("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "UTF16ToString") || (k.UTF16ToString = function() {
                                lA("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToUTF16") || (k.stringToUTF16 = function() {
                                lA("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "lengthBytesUTF16") || (k.lengthBytesUTF16 = function() {
                                lA("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "UTF32ToString") || (k.UTF32ToString = function() {
                                lA("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "stringToUTF32") || (k.stringToUTF32 = function() {
                                lA("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "lengthBytesUTF32") || (k.lengthBytesUTF32 = function() {
                                lA("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "allocateUTF8") || (k.allocateUTF8 = function() {
                                lA("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "allocateUTF8OnStack") || (k.allocateUTF8OnStack = function() {
                                lA("'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), k.writeStackCookie = oA, k.checkStackCookie = wA, Object.getOwnPropertyDescriptor(k, "intArrayFromBase64") || (k.intArrayFromBase64 = function() {
                                lA("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "tryParseAsDataURI") || (k.tryParseAsDataURI = function() {
                                lA("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                            }), Object.getOwnPropertyDescriptor(k, "ALLOC_NORMAL") || Object.defineProperty(k, "ALLOC_NORMAL", {
                                configurable: !0,
                                get: function() {
                                    lA("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                                }
                            }), Object.getOwnPropertyDescriptor(k, "ALLOC_STACK") || Object.defineProperty(k, "ALLOC_STACK", {
                                configurable: !0,
                                get: function() {
                                    lA("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                                }
                            }), Object.getOwnPropertyDescriptor(k, "ALLOC_DYNAMIC") || Object.defineProperty(k, "ALLOC_DYNAMIC", {
                                configurable: !0,
                                get: function() {
                                    lA("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                                }
                            }), Object.getOwnPropertyDescriptor(k, "ALLOC_NONE") || Object.defineProperty(k, "ALLOC_NONE", {
                                configurable: !0,
                                get: function() {
                                    lA("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                                }
                            }), nA = function A() {
                                XI || Eg(), XI || (nA = A)
                            }, k.run = Eg, k.preInit)
                            for ("function" == typeof k.preInit && (k.preInit = [k.preInit]); k.preInit.length > 0;) k.preInit.pop()();
                        var og = !0;
                        return k.noInitialRun && (og = !1), r = !0, Eg(), await new Promise((async (A, I) => {
                            k.onRuntimeInitialized = async function() {
                                for (oI.writeFile("scene.xml", Q), B.forEach((function(A) {
                                        oI.writeFile(A, A)
                                    })), k._main(); void 0 === k.imageData;) await new Promise(((A, I) => {
                                    setTimeout(A, 100), E()
                                }));
                                A(k.imageData)
                            }
                        }))
                    }
                },
                993: () => {},
                386: () => {}
            },
            I = {};
        return function g(C) {
            if (I[C]) return I[C].exports;
            var Q = I[C] = {
                exports: {}
            };
            return A[C](Q, Q.exports, g), Q.exports
        }(436)
    })();

}); // this concludes the module definition